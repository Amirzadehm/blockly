{
    "@metadata": {
        "author": "Ellen Spertus <ellen.spertus@gmail.com>",
        "lastupdated": "2013-09-13 16:16:03.849223",
        "locale": "en_us",
        "messagedocumentation" : "qqq"
    },
    "Apps.subtitle": "a visual programming environment",
    "Apps.blocklyMessage": "Blockly",
    "Apps.projectMessage": "CS First",
    "Apps.codeTooltip": "See generated JavaScript code.",
    "Apps.linkTooltip": "Save and link to blocks.",
    "Apps.runTooltip": "Run the program defined by the blocks in the workspace.",
    "Apps.runProgram": "Run Program",
    "Apps.resetProgram": "Reset",
    "Apps.dialogOk": "OK",
    "Apps.dialogCancel": "Cancel",
    "Apps.help": "Help",
    "Apps.catLogic": "Logic",
    "Apps.catLoops": "Loops",
    "Apps.catMath": "Math",
    "Apps.catText": "Text",
    "Apps.catLists": "Lists",
    "Apps.catColour": "Colour",
    "Apps.catVariables": "Variables",
    "Apps.catProcedures": "Procedures",
    "Apps.httpRequestError": "There was a problem with the request.",
    "Apps.linkAlert": "Share your blocks with this link:\n\n%1",
    "Apps.hashError": "Sorry, '%1' doesn't correspond with any saved program.",
    "Apps.xmlError": "Could not load your saved file.  Perhaps it was created with a different version of Blockly?",
    "Apps.hintTitle": "Hint:",
    "Apps.emptyBlocksErrorMsg": "Remove empty blocks.",
    "Apps.tooFewBlocksMsg": "You are using all of the necessary types of blocks, but try using more  of these types of blocks to complete this level.",
    "Apps.tooManyBlocksMsg": "This level can be solved with <x id='START_SPAN'/><x id='END_SPAN'/> blocks.",
    "Apps.missingBlocksErrorMsg": "Try one or more of the blocks below to solve this level.",
    "Apps.levelIncompleteError": "You are using all of the necessary types of blocks but not in the right way.",
    "Apps.nextLevel": "Congratulations! You have completed this level.",
    "Apps.finalLevelMsg": "Congratulations! You have solved the final level.",
    "Apps.listVariable": "list",
    "Apps.textVariable": "text",
    "Bird.hungry": "hungry",
    "Bird.heading": "heading",
    "Bird.doIf": "if",
    "Bird.doCode": "do",
    "Bird.elseCode": "else",
    "Bird.hungryTooltip": "The condition when the bird has not gotten the food.",
    "Bird.headingTooltip": "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.",
    "Bird.positionTooltip": "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.",
    "Bird.nextLevel": "Congratulations! Are you ready to proceed to level %1?",
    "Bird.finalLevel": "Congratulations! You have solved the final level.",
    "Bird.bird": "Bird",
    "Bird.runTooltip": "Makes the player do what the blocks say.",
    "Bird.resetTooltip": "Put the player back at the start of the level.",
    "Maze.moveForward": "move forward",
    "Maze.turnLeft": "turn left",
    "Maze.turnRight": "turn right",
    "Maze.doCode": "do",
    "Maze.elseCode": "else",
    "Maze.pathAhead": "if path ahead",
    "Maze.pathLeft": "if path to the left",
    "Maze.pathRight": "if path to the right",
    "Maze.repeatUntil": "repeat until",
    "Maze.moveForwardTooltip": "Move me forward one space.",
    "Maze.q3wrong": "No - Try tracking my direction while following the program.",
    "Maze.q3right": "That's right!",
    "Maze.q5wrong": "No - Try tracking my direction while following the program.",
    "Maze.q5right": "That's right!",
    "Maze.q9wrong": "No - Try tracking my direction while following the program.",
    "Maze.q9right": "That's right!",
    "Maze.turnTooltip": "Turns me left or right by 90 degrees.",
    "Maze.ifTooltip": "If there is a path in the specified direction, then do some actions.",
    "Maze.ifelseTooltip": "If there is a path in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.",
    "Maze.whileTooltip": "Repeat the enclosed actions until finish point is reached.",
    "Maze.capacity0": "You have<x id='START_SPAN'/>0<x id='END_SPAN'/> blocks left.",
    "Maze.capacity1": "You have <x id='START_SPAN'/>1<x id='END_SPAN'/> block left.",
    "Maze.capacity2": "You have <x id='START_SPAN'/>%1<x id='END_SPAN'/>blocks left.",
    "Maze.nextLevel": "Congratulations! You have completed this level.",
    "Maze.finalLevel": "Congratulations! You have solved the final level.",
    "Maze.oneTopBlock": "On this level, you need to stack together all of the blocks in the white workspace.",
    "Maze.numBlocksNeeded": "This level can be solved with %1 blocks.",
    "Maze.maze": "Maze",
    "Maze.hintTitle": "Hint:",
    "Maze.missingBlocksErrorMsg": "Try one or more of the blocks below to solve this level.",
    "Maze.levelIncompleteError": "You are using all of the necessary types of blocks but not in the right way.",
    "Maze.reinfMsg1": "Watch the video below and learn how to use blocks to make me move.",
    "Maze.reinfMsg3": "Which direction am I facing after this program ends?",
    "Maze.reinfMsg2": "A repeat block repeats the blocks inside it until I reach the red marker.",
    "Maze.reinfMsg4": "Here is an 'if' block: I will turn in a particular direction if there is a path in that direction. For example if there is a path to the left, I will turn left.",
    "Maze.reinfMsg5": "We can place 'if' blocks inside 'repeat' blocks. Where am I when this program ends? Click on the correct picture below.",
    "Maze.reinfMsg6": "<x id='START_STRONG'/>Remember:<x id='END_STRONG'/><x id='START_UNORDERED_LIST'/><x id='START_ITEM'/>'repeat' blocks perform an action multiple times without additional blocks.<x id='END_ITEM'/><x id='START_ITEM'/>'if' blocks check if there is a path in a certain direction.<x id='END_ITEM'/><x id='END_UNORDERED_LIST'/>",
    "Maze.reinfMsg8": "Here is an 'if-else' block: I move forward if there is a path ahead, otherwise I turn left.",
    "Maze.reinfMsg9": "Will the blocks below move me to the red marker?",
    "Maze.dirN": "N",
    "Maze.dirE": "E",
    "Maze.dirS": "S",
    "Maze.dirW": "W",
    "Maze.yes": "Yes",
    "Maze.no": "No",
    "Maze.tryAgain": "Try again",
    "Maze.continue": "Continue",
    "Maze.instructions1_m1": "A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.",
    "Maze.instructions2_m1": "What should I do to follow the path?",
    "Maze.instructions3_m1": "Computers have limited memory. Reach the end of this path using only two blocks.",
    "Maze.instructions4_m1": "Reach the goal using only five blocks.",
    "Maze.instructions5_m1": "I will have to turn left when I cannot go straight. Use an 'if' block to see if their is a path in another direction.",
    "Maze.instructions6_m1": "An 'if' condition will do something only if the condition is true.  Try turning left if there is a path to the left.",
    "Maze.instructions7_m1": "A small change to the blocks from the previous maze will solve this level.",
    "Maze.instructions8_m1": "You can use more than one 'if' statement.",
    "Maze.instructions9_m1": "If-else blocks will do one thing or the other.",
    "Maze.instructions10_m1": "Use the 'if-else' block to help me get out of the maze!",
    "Maze.instructions1_m2": "A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.",
    "Maze.instructions2_m2": "A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.",
    "Maze.instructions3_m2": "What should I do to follow the path?",
    "Maze.instructions4_m2": "What should I do to follow the path?",
    "Maze.instructions5_m2": "Try to reach the end of this path using only two blocks.",
    "Maze.instructions6_m2": "Try to reach the end of this path using only three blocks.",
    "Maze.instructions7_m2": "Try to reach the end of this path using only two repeat blocks.",
    "Maze.instructions8_m2": "Try to reach the end of this path using only two repeat blocks.",
    "Maze.instructions9_m2": "Try to reach the end of this path using the new repeat block.",
    "Maze.instructions10_m2": "Try to reach the end of this path using only three blocks.",
    "Maze.instructions11_m2": "Reach the goal using only five blocks.",
    "Maze.instructions12_m2": "Reach the goal using only five blocks.",
    "Maze.instructions13_m2": "I will have to turn left when I cannot go straight. Use an 'if' block to see if their is a path in another direction.",
    "Maze.instructions14_m2": "I will have to turn right when I cannot go straight. Use an 'if' block to see if their is a path in another direction.",
    "Maze.instructions15_m2": "An 'if' condition will do something only if the condition is true.  Try turning right if there is a path to the right.",
    "Maze.instructions16_m2": "An 'if' condition will do something only if the condition is true.  Try turning right if there is a path to the right.",
    "Maze.instructions17_m2": "If-else blocks will do one thing or the other.",
    "Maze.instructions18_m2": "Use the 'if-else' block to help me get out of the maze!",
    "Maze.codeTooltip": "See generated JavaScript code.",
    "Maze.linkTooltip": "Save and link to blocks.",
    "Maze.runProgram": "Run",
    "Maze.resetProgram": "Reset",
    "Turtle.showMe": "Show me",
    "Turtle.colourTooltip": "Changes the color of the pen.",
    "Turtle.degrees": "degrees",
    "Turtle.hideTurtle": "hide turtle",
    "Turtle.moveBackward": "move backward by",
    "Turtle.moveForward": "move forward by",
    "Turtle.moveForwardTooltip": "Moves the turtle forward.",
    "Turtle.jumpBackward": "jump backward by",
    "Turtle.jumpForward": "jump forward by",
    "Turtle.jumpForwardTooltip": "Moves the turtle forward without leaving any marks.",
    "Turtle.moveTooltip": "Moves the turtle forward or backward by the specified amount.",
    "Turtle.penDown": "pen down",
    "Turtle.penTooltip": "Lifts or lowers the pen, to start or stop drawing.",
    "Turtle.penUp": "pen up",
    "Turtle.dots": "dots",
    "Turtle.setColour": "set color",
    "Turtle.setWidth": "set width",
    "Turtle.showTurtle": "show turtle",
    "Turtle.turnLeft": "turn left by",
    "Turtle.turnRightTooltip": "Turns the turtle right by the specified angle.",
    "Turtle.turnRight": "turn right by",
    "Turtle.turnTooltip": "Turns the turtle left or right by the specified number of degrees.",
    "Turtle.turtleVisibilityTooltip": "Makes the turtle (green circle and arrow) visible or invisible.",
    "Turtle.widthTooltip": "Changes the width of the pen.",
    "Turtle.loopVariable": "counter",
    "Turtle.blocksUsed": "Blocks used: %1",
    "Turtle.drawAHouseNotDefined8": "You need to complete level 7 before doing this level.",
    "Turtle.drawAHouseNotDefined9": "You need to complete levels 7 and 8 before doing this level.",
    "Turtle.notBlackColour": "You need to set a color other than black for this level.",
    "Turtle.tooFewColours": "You need to use at least %1 different colors on this level.  You used only %2.",
    "Turtle.wrongColour": "Your picture is the wrong color.  For this level, it needs to be %1.",
    "Turtle.drawASquare": "draw a square",
    "Turtle.lengthParameter": "length",
    "Turtle.drawASnowman": "draw a snowman",
    "Turtle.heightParameter": "height",
    "Turtle.title": "CS First: Turtle Graphics %1",
    "Turtle.numBlocksNeeded": "This level can be solved with %1 blocks.  You used %2.",
    "Turtle.inter1_2-pre": "I can draw in different colors.  Choose what color you would like me to use with the &quot;set color&quot; block.  Blocks for changing color don't count to your block count used for scoring, so go wild!",
    "Turtle.inter1_3-pre": "Tired of dragging and dropping?  Let the &quot;repeat&quot; block do the work for you.",
    "Turtle.inter1_4-pre": "Do you like surprises?  Use the &quot;random color&quot; block to let me pick the color.",
    "Turtle.inter1_5-pre": "Did you know you can copy and paste a block?",
    "Turtle.inter1_6-pre": "I can move backward, not just forward.",
    "Turtle.inter1_8-pre": "Do you ever get tired of waiting for me?  You can make me move faster (or slower) with the speed slider.",
    "Turtle.inter1_10-pre": "Congratulations on completing this tutorial.  Just for fun, here's a new block that changes how wide of lines I draw.  We've been using a default width of 5.",
    "Turtle.inter2_1-pre": "To make room for new blocks, we've put the blocks into categories.  You may have to look around for your old favorite blocks, but they're all there.",
    "Turtle.inter2_2-pre": "We've added a new category for &quot;Functions&quot;, a powerful new type of block.",
    "Turtle.inter2_3-pre": "Wondering why it's better to use &quot;repeat&quot; than copying and pasting the blocks three times?  See why on the next level",
    "Turtle.inter2_4-pre": "Here's how I solved the previous level.  Make sure you understand it before proceeding.",
    "Turtle.inter2_5-pre": "Let's explore what we can do with squares of different sizes...",
    "Turtle.inter2_6-pre": "Wouldn't it be nice if you could tell me to count by tens from 50 to 100, drawing a square each time?  Well you can -- with the new &quot;count with&quot; block.  The programs on the left and right do the same thing.",
    "Turtle.inter2_7-pre": "This code draws a boxy spiral.  You'll need to figure out what should go in the blanks on the &quot;count with&quot; block to do it with fewer blocks on the next level.",
    "Turtle.inter2_8-pre": "We've given you two new blocks: &quot;jump forward&quot;, which moves the turtle without leaving a trail, and &quot;draw a snowman&quot;, which draws an elephant -- just kidding.",
    "Turtle.inter2_9-pre": "You don't need to always count from a low number to a high number.  You can count from high to low too.",
    "Turtle.inter3_1-pre": "You'll now learn how to create new blocks, which are called &quot;functions&quot;.",
    "Turtle.inter3_2-pre": "Here's how the &quot;draw a square&quot; block was created.  On this level, you'll create your own &quot;draw a triangle&quot; block.",
    "Turtle.inter3_2-post": "Congratulations on adding a new block!  That's a huge step for a programmer.  Dividing big tasks into bite-sized pieces is what makes large programs possible.",
    "Turtle.inter3_5-pre": "The new blocks that you define can be used just like the built-in blocks, including being used within another block definition...",
    "Turtle.inter3_6-pre": "Let me show you how the input was added to &quot;draw a square&quot;.  You'll need to know this for this level, where you'll add an input to &quot;draw a triangle&quot;.",
    "Turtle.inter3_8-pre": "It can be useful for a function to put the turtle at a good ending position, to help with building up bigger pictures.",
    "Turtle.inter3_9-post": "You now know how to control the turtle, use loops (&quot;repeat&quot; and &quot;count from&quot;), and write and use functions.  Congratulations on becoming a programmer!",
    "Turtle.instructions1_1": "I'm a turtle with chalk on my belly. Stack up blocks and press &quot;Run Program&quot; to make me draw the shown picture.",
    "Turtle.instructions1_2": "Draw a square, making each side a different color.",
    "Turtle.instructions1_3": "Make a square using only 3 blocks.  (Remember that blocks to set color are free.)",
    "Turtle.instructions1_4": "Draw a triangle whose sides are all 100 dots and are in random colors.  You'll have to figure out how far to turn.",
    "Turtle.instructions1_5": "Draw a triangle and then a square to draw an envelope.",
    "Turtle.instructions1_6": "Can you figure out how draw this triangle and square?",
    "Turtle.instructions1_7": "See if you can draw these green glasses.",
    "Turtle.instructions1_8": "After trying out these blocks, see what happens if you make them repeat 8 times.  It should look a little different every time you run it.",
    "Turtle.instructions1_9": "Figure out what number to replace the question marks with to draw a circle.",
    "Turtle.instructions1_10": "Draw anything you want. Some ideas are a stick figure, snowflake, or spiral.  You could also try out the new &quot;set width&quot; block.  Have fun!",
    "Turtle.instructions2_1": "Find the familiar blocks in the new categories to draw a square in your favorite color.",
    "Turtle.instructions2_2": "Use the new &quot;draw a square&quot; block, found in the &quot;Functions&quot; category, to draw a small green square.",
    "Turtle.instructions2_3": "Use the &quot;repeat&quot; block to draw 3 squares of size 100, each 120 degrees apart, in random colors.",
    "Turtle.instructions2_4": "Now change the code to draw 36 squares, each 10 degrees apart.",
    "Turtle.instructions2_5": "Draw squares with sides of 50, 60, 70, 80, and 90 dots.  You'll need lots of blocks.",
    "Turtle.instructions2_6": "Modify this program with the &quot;counter&quot; block (found in the Variables category) to draw the same series of squares with fewer blocks than on the previous level.",
    "Turtle.instructions2_7": "Replace the pale (disabled) blocks with a &quot;count with&quot; block (in the Loops category) and &quot;counter&quot; block (in the Variables category) to draw the same spiral.",
    "Turtle.instructions2_8": "Draw three snowmen 150 dots tall in different colors, 100 dots apart.  Use the new &quot;draw a snowman&quot; function and &quot;jump forward&quot; block.",
    "Turtle.instructions2_9": "Use a &quot;count with&quot; loop to draw a family of snowmen with heights of 110, 100, 90, 80, and 70 dots, each 60 dots apart.",
    "Turtle.instructions2_10": "Draw whatever you want.  One idea is experimenting with different types of spirals.  What happens if you change the turn amount, rather than the move amount?  TODO: Add starting blocks.",
    "Turtle.instructions3_1": "You can now see how the &quot;draw a square&quot; and &quot;draw a circle&quot; functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the &quot;draw a square&quot; block to actually draw a square.",
    "Turtle.instructions3_2": "Using the &quot;draw a square&quot; function as an example, create a &quot;draw a triangle&quot; function and use it.",
    "Turtle.instructions3_3": "Draw triangular fences around the cats and a square fence around the cow.  Tip: Test the program as you go along.",
    "Turtle.instructions3_4": "See if you can figure out how to use &quot;draw a square&quot; and &quot;draw a triangle&quot; (and some other blocks) to draw a house around the lion.",
    "Turtle.instructions3_5": "Now create a &quot;draw a house&quot; function and use it house two cats.",
    "Turtle.instructions3_6": "Using &quot;draw a square&quot; as an example, add an input named &quot;length&quot; to &quot;draw a triangle&quot;.  Then, draw triangles in different colors around the animals.",
    "Turtle.instructions3_7": "Add a &quot;height&quot; input to &quot;draw a house&quot; and build a big house for the elephant.",
    "Turtle.instructions3_8": "Here are all of the blocks from the previous level.  Modify &quot;draw a house&quot; so the turtle ends up at the bottom right corner of the new house.  Use this modified function to house all the animals.",
    "Turtle.instructions3_9": "Use a &quot;count with&quot; block and your code from the previous level to draw houses of size 50, 100, and 150 in different colors.",
    "Turtle.instructions3_10": "You're now free to do whatever you want.  One idea is to try running this program with different turn amounts (higher or lower than 90).  Other ideas are to draw a star, circle, heart, or animal.",
    "Turtle.turtle1": "Turtle 1",
    "Turtle.turtle2": "Turtle 2",
    "Turtle.turtle3": "Turtle 3",
    "Turtle.runProgram": "Run",
    "Turtle.resetProgram": "Reset",
    "Turtle.codeTooltip": "See generated JavaScript code.",
    "Apps.tooMuchWorkError": "You made me do a lot of work!  Could you try repeating fewer times?",
    "Turtle.tryAgain": "Try again",
    "Turtle.continue": "Continue",
    "Turtle.catTurtle": "Actions",
    "Turtle.catColour": "Color",
    "Turtle.catProcedures": "Functions",
    "Turtle.catControl": "Loops",
    "Turtle.catMath": "Math",
    "Turtle.catVariables": "Variables",
    "Karel.moveForward": "move forward",
    "Karel.putDownBall": "fill 1",
    "Karel.putDown5": "put down 5",
    "Karel.pickUpBall": "remove 1",
    "Karel.while": "while",
    "Karel.ballsPresent": "there is a pile",
    "Karel.holesPresent": "there is a hole",
    "Karel.turnLeft": "turn left",
    "Karel.turnRight": "turn right",
    "Karel.doCode": "do",
    "Karel.elseCode": "else",
    "Karel.pathAhead": "path ahead",
    "Karel.pathLeft": "path to the left",
    "Karel.pathRight": "path to the right",
    "Karel.noPathAhead": "path is blocked",
    "Karel.noPathLeft": "no path to the left",
    "Karel.noPathRight": "no path to the right",
    "Karel.repeatUntilBlocked": "while path ahead",
    "Karel.repeatUntilFinish": "repeat until finish",
    "Karel.repeatWhileCurrentNotClear": "while",
    "Karel.moveForwardTooltip": "Move me forward one space.",
    "Karel.q4wrong": "No - Try tracking my direction while following the program.",
    "Karel.q4right": "That's right! Good job.",
    "Karel.q5wrong": "No - Try tracking my direction while following the program.",
    "Karel.q5right": "You got it right!",
    "Karel.q10wrong": "No - Try tracking my direction while following the program.",
    "Karel.q10right": "That's right!",
    "Karel.turnTooltip": "Turns me left or right by 90 degrees.",
    "Karel.ifTooltip": "If there is a path in the specified direction, then do some actions.",
    "Karel.ifelseTooltip": "If there is a path in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.",
    "Karel.whileTooltip": "Repeat the enclosed actions until finish point is reached.",
    "Karel.capacity0": "You have<x id='START_SPAN'/>0<x id='END_SPAN'/> blocks left.",
    "Karel.capacity1": "You have <x id='START_SPAN'/>1<x id='END_SPAN'/> block left.",
    "Karel.capacity2": "You have <x id='START_SPAN'/>%1<x id='END_SPAN'/> blocks left.",
    "Karel.nextLevel": "Congratulations! You have completed this level.",
    "Karel.finalLevel": "Congratulations! You have solved the final level.",
    "Karel.oneTopBlock": "On this level, you need to stack together all of the blocks in the white workspace.",
    "Karel.putdownTower": "put down tower",
    "Karel.pickupTower": "pickup tower",
    "Karel.maze": "Farmer&amp;nbsp;&amp;nbsp;<x id='PAGE'/>",
    "Karel.hint1_1": "You could solve this level with fewer blocks. Can you find a solution with fewer blocks?",
    "Karel.hint1_3": "There is a solution using only 3 blocks. Can you find it? Did you using the repeat block?",
    "Karel.hint1_4": "Can you find a solution using only 4 blocks? Try using one of the green loop blocks.",
    "Karel.hint1_5": "Can you find a solution using 4 blocks? Try putting a loop inside of another loop. Remember, loop blocks are green.",
    "Karel.hint1_6": "There is a solution using only 3 blocks. Can you find it? Did you try the new option on the while block?",
    "Karel.hint1_7": "Can you use the while block to complete the level with only 4 blocks?",
    "Karel.hint1_8": "There is a solution using only 3 blocks. Can you find it?za",
    "Karel.hint1_9": "Could you use two while blocks to complete this level with fewer total blocks?",
    "Karel.hint1_10": "Can you find a solution using 4 blocks? Try including an if block.",
    "Karel.hint1_11": "Can you find a solution using 6 blocks? Try including 2 if blocks.",
    "Karel.hint2_1": "Use only the blocks you need to get to complete the level.",
    "Karel.hint2_2": "Can you find a solution using 2 blocks? Try using the given function(s).",
    "Karel.hint2_3": "Can you find a solution using 3 blocks? Try using the given function(s) inside a while block.",
    "Karel.hint2_4": "Could you use fewer blocks? Try defining your own function and using it inside one of the loop blocks.",
    "Karel.hint2_5": "Could you use fewer blocks? Try defining your own function and using it inside one of the loop block.",
    "Karel.hint2_6": "Can you find a solution using 4 blocks? Try using the given function(s).",
    "Karel.hint2_7": "Can you find a solution by adding 8 blocks in the &quot;avoid the cow and remove 1&quot; block?",
    "Karel.hint2_8": "Can you find a solution using 2 blocks? Try using the given function(s) inside one of the loop blocks.",
    "Karel.hint2_9": "Can you find a solution using 4 blocks? Try including an if block.",
    "Karel.hint2_10": "Can you find a solution using fewer blocks? Try including two if blocks.",
    "Karel.dirN": " N",
    "Karel.dirE": " E",
    "Karel.dirS": " S",
    "Karel.dirW": " W",
    "Karel.ok": "OK",
    "Karel.yes": " Yes",
    "Karel.no": " No",
    "Karel.tryAgain": "Try again",
    "Karel.continue": "Continue",
    "Karel.codeTooltip": "See generated JavaScript code.",
    "Karel.linkTooltip": "Save and link to blocks.",
    "Karel.runProgram": " Run Program",
    "Karel.resetProgram": " Reset",
    "Karel.instructions1_1": "Help me flatten the field on my farm so it's ready for planting. Move me to the pile of dirt to remove it.",
    "Karel.instructions1_2": "Move me to the hole and fill it with two shovelfuls of dirt.",
    "Karel.instructions1_3": "Move me to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible.",
    "Karel.instructions1_4": "Make me remove the 4 piles.",
    "Karel.instructions1_5": "Make me fill in all the holes. Each hole needs 5 shovelfuls of dirt.",
    "Karel.instructions1_6": "Make me remove all the piles of dirt, using as few blocks as possible. Check out the new option in the dropdown menu on the while block.",
    "Karel.instructions1_7": "I don't know how many shovelfuls of dirt this hole needs. Write a program that makes me fill it until it's even.",
    "Karel.instructions1_8": "Make me fill in the hole at the end of the field, using as few blocks as possible.",
    "Karel.instructions1_9": "Make me remove all the piles, using as few blocks as possible.",
    "Karel.instructions1_10": "It's nighttime, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it.",
    "Karel.instructions1_11": "It's still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in.",
    "Karel.instructions2_1": "Try using the blocks to help me remove all the piles and fill in all the holes on the ground.",
    "Karel.instructions2_2": "Use the new function block called &quot;fill 5&quot; to help me fill in this hole.",
    "Karel.instructions2_3": "Use the function block to make me fill in all the holes.",
    "Karel.instructions2_4": "Define a new function that removes 7 shovelfuls. Then use it to write a program that helps me remove all the piles.",
    "Karel.instructions2_5": "Create a new function that removes 3 shovelfuls from a pile, and use it to help me level out all the piles.",
    "Karel.instructions2_6": "Use the new functions, &quot;fill 8&quot; and &quot;remove 8&quot;, to help me level out the pile and fill in the hole.",
    "Karel.instructions2_7": "There's a cow in my field! Write a new function that helps me avoid the cow and remove the pile.",
    "Karel.instructions2_8": "Use the function, &quot;avoid the cow and remove 1&quot;, to help me remove all the piles.",
    "Karel.instructions2_9": "Use one of the new functions to help me remove all of the piles on the ground with as few blocks as possible.",
    "Karel.instructions2_10": "Move me across the field, and use the functions to help me remove all the piles and fill all the holes.",
    "Karel.instructions2_11": "Use the new function, &quot;remove 1 and avoid the cow&quot;, to make me level out the piles.",
    "Karel.catKarel": "Actions",
    "Karel.catControl": "Loops",
    "Karel.catProcedures": "Functions",
    "Karel.catCondition": "Conditionals"
}
