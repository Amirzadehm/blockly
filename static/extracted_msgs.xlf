<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="SoyMsgBundle" datatype="x-soy-msg-bundle" xml:space="preserve" source-language="en">
    <body>
      <trans-unit id="33394202388558275" datatype="html">
        <source>N</source>
        <note priority="1" from="description">An abbreviation of the direction North</note>
        <note priority="1" from="meaning">Maze.dirN</note>
      </trans-unit>
      <trans-unit id="34428208008617605" datatype="html">
        <source>Maze</source>
        <note priority="1" from="description">brief title - Specifies that this is Blockly's '''Maze''' tutorial.</note>
        <note priority="1" from="meaning">Maze.maze</note>
      </trans-unit>
      <trans-unit id="45345511176596377" datatype="html">
        <source>The "length" input to "draw a triangle" should be the "height" variable.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleCallWithParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="114543133414971626" datatype="html">
        <source>Which direction am I facing after this program ends?</source>
        <note priority="1" from="description">instructions - program' refers to a series of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Maze.reinfMsg3</note>
      </trans-unit>
      <trans-unit id="144914298205682744" datatype="html">
        <source>no path to the right</source>
        <note priority="1" from="description">condensed form of 'if there is a no path to the right', as in: 'if no path to the right, turn right'.</note>
        <note priority="1" from="meaning">Karel.noPathRight</note>
      </trans-unit>
      <trans-unit id="196845303311122428" datatype="html">
        <source>pen up</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.penUp</note>
      </trans-unit>
      <trans-unit id="227288626954131611" datatype="html">
        <source>Could you use fewer blocks? Try defining your own function and using it inside one of the loop blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_4</note>
      </trans-unit>
      <trans-unit id="243004437121520865" datatype="html">
        <source>else</source>
        <note priority="1" from="description">conjunction - 'otherwise', introducing commands to be performed if a previous condition was not true, as in 'if x&gt;3, do this, else do that'.</note>
        <note priority="1" from="meaning">Karel.elseCode</note>
      </trans-unit>
      <trans-unit id="250839010734163446" datatype="html">
        <source>height</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.heightParameter</note>
      </trans-unit>
      <trans-unit id="271859688095231445" datatype="html">
        <source>Create a new function that removes 3 shovelfuls from a pile, and use it to help me level out all the piles.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_5</note>
      </trans-unit>
      <trans-unit id="295126337553066153" datatype="html">
        <source>pen down</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.penDown</note>
      </trans-unit>
      <trans-unit id="301005848168874563" datatype="html">
        <source>Here is an 'if-else' block: I move forward if there is a path ahead, otherwise I turn left.</source>
        <note priority="1" from="description">instructions - An example of an 'if-else' block is if there is a path ahead move forward, else turn left.</note>
        <note priority="1" from="meaning">Maze.reinfMsg8</note>
      </trans-unit>
      <trans-unit id="304227982281877910" datatype="html">
        <source>Using "draw a square" as an example, add an input named "length" to "draw a triangle".  Then, draw triangles in different colors around the animals.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_6</note>
      </trans-unit>
      <trans-unit id="320660831584776468" datatype="html">
        <source>This level can be solved with %1 blocks.  You used %2.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.numBlocksNeeded</note>
      </trans-unit>
      <trans-unit id="376023948138102352" datatype="html">
        <source>Reach the goal using only five blocks.</source>
        <note priority="1" from="description">instructions - the goal is reaching the end point in a maze; 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions12_m2</note>
      </trans-unit>
      <trans-unit id="380340402060185830" datatype="html">
        <source>Add a "height" input to "draw a house" and build a big house for the elephant.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_7</note>
      </trans-unit>
      <trans-unit id="388541572179212146" datatype="html">
        <source>It's nighttime, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_10</note>
      </trans-unit>
      <trans-unit id="390084050358184874" datatype="html">
        <source>A small change to the blocks from the previous maze will solve this level.</source>
        <note priority="1" from="description">instructions - 'blocks' refers to a child's building blocks</note>
        <note priority="1" from="meaning">Maze.instructions7_m1</note>
      </trans-unit>
      <trans-unit id="395453421459909063" datatype="html">
        <source>From the "Variables" category, get the "counter" block, and use it as the "length" input to "draw a square".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError2Msg-p2-l6</note>
      </trans-unit>
      <trans-unit id="410978130615297857" datatype="html">
        <source>You'll need to move me in order to draw anything.</source>
        <note priority="1" from="description">alert - This error message is displayed when the user has not used at least one of the move blocks that is required for this level.</note>
        <note priority="1" from="meaning">BlocklyApps.moveError1Msg</note>
      </trans-unit>
      <trans-unit id="427699719473726433" datatype="html">
        <source>Hint:</source>
        <note priority="1" from="description">title - this indicates to the user that what follows are ways to improve and/or fix their code.</note>
        <note priority="1" from="meaning">Maze.hintTitle</note>
      </trans-unit>
      <trans-unit id="445267018928785862" datatype="html">
        <source>You could solve this level with fewer blocks. Can you find a solution with fewer blocks?</source>
        <note priority="1" from="description">hint - 'block' refers to a child's stackable toys.</note>
        <note priority="1" from="meaning">Karel.hint1_1</note>
      </trans-unit>
      <trans-unit id="471029618522690538" datatype="html">
        <source>put down tower</source>
        <note priority="1" from="description">Place a tower on the ground</note>
        <note priority="1" from="meaning">Karel.putdownTower</note>
      </trans-unit>
      <trans-unit id="475166420037717394" datatype="html">
        <source>Congratulations! You have completed this level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the maze, inviting them to precede to the next level of difficulty.</note>
        <note priority="1" from="meaning">Maze.nextLevel</note>
      </trans-unit>
      <trans-unit id="480823864302136740" datatype="html">
        <source>Find the familiar blocks in the new categories to draw a square in your favorite color.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_1</note>
      </trans-unit>
      <trans-unit id="495427248197512279" datatype="html">
        <source>You're now free to do whatever you want.  One idea is to try running this program with different turn amounts (higher or lower than 90).  Other ideas are to draw a star, circle, heart, or animal.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_10</note>
      </trans-unit>
      <trans-unit id="511535435235111626" datatype="html">
        <source>Help me flatten the field on my farm so it's ready for planting. Move me to the pile of dirt to remove it.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_1</note>
      </trans-unit>
      <trans-unit id="514758953227426343" datatype="html">
        <source>Show me</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.showMe</note>
      </trans-unit>
      <trans-unit id="525555915684697675" datatype="html">
        <source>You need to tell "draw a square" that its length should be the height of the house.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.squareCallWithVariableParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="552526916301133670" datatype="html">
        <source>Moves the turtle forward or backward by the specified amount.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveTooltip</note>
      </trans-unit>
      <trans-unit id="614565985458201541" datatype="html">
        <source>Use the function block to make me fill in all the holes.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_3</note>
      </trans-unit>
      <trans-unit id="647788441440746219" datatype="html">
        <source>Make me fill in all the holes. Each hole needs 5 shovelfuls of dirt.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_5</note>
      </trans-unit>
      <trans-unit id="662393348385954208" datatype="html">
        <source>There's a cow in my field! Write a new function that helps me avoid the cow and remove the pile.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_7</note>
      </trans-unit>
      <trans-unit id="678880373522538302" datatype="html">
        <source>You are using all of the necessary types of blocks, but try using more of these types of blocks to complete this level.</source>
        <note priority="1" from="description">alert - The user has not completed the level, is using all of the necessary types of blocks, but needs more of these types of blocks to complete the level.</note>
        <note priority="1" from="meaning">Maze.tooFewBlocksMsg</note>
      </trans-unit>
      <trans-unit id="686007247288680202" datatype="html">
        <source>Draw a triangle whose sides are all 100 dots and are in random colors.  You'll have to figure out how far to turn.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_4</note>
      </trans-unit>
      <trans-unit id="699246884300242965" datatype="html">
        <source>heading</source>
        <note priority="1" from="description">block text - the compass direction toward which a traveler or vehicle is or should be moving; course.</note>
        <note priority="1" from="meaning">Bird.heading</note>
      </trans-unit>
      <trans-unit id="703067714057600362" datatype="html">
        <source>Use the 'if-else' block to help me get out of the maze!</source>
        <note priority="1" from="description">instructions - an example of an 'if-else' block is: 'if there is a path to the left, turn left, else or otherwise turn right'.</note>
        <note priority="1" from="meaning">Maze.instructions18_m2</note>
      </trans-unit>
      <trans-unit id="707237950593730668" datatype="html">
        <source>I'm a turtle with chalk on my belly. Stack up blocks and press "Run Program" to make me draw the shown picture.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_1</note>
      </trans-unit>
      <trans-unit id="711550745704781067" datatype="html">
        <source>path to the left</source>
        <note priority="1" from="description">condensed form of 'if there is a path to the left', as in: 'if path to the left, turn left'.</note>
        <note priority="1" from="meaning">Karel.pathLeft</note>
      </trans-unit>
      <trans-unit id="768570576516576913" datatype="html">
        <source>text</source>
        <note priority="1" from="description">variable name - Default [https://code.google.com/p/blockly/wiki/Variables variable] representing a [https://code.google.com/p/blockly/wiki/Text piece of text].  This should be a single word, preferably short.</note>
        <note priority="1" from="meaning">Apps.textVariable</note>
      </trans-unit>
      <trans-unit id="783174224955555486" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Karel.q5wrong</note>
      </trans-unit>
      <trans-unit id="820940435620302045" datatype="html">
        <source>fill 1</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person putting down a ball.</note>
        <note priority="1" from="meaning">Karel.putDownBall</note>
      </trans-unit>
      <trans-unit id="826924223964705002" datatype="html">
        <source>Can you use the while block to complete the level with only 4 blocks?</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over. The red marker is the goal to be reached in the maze.</note>
        <note priority="1" from="meaning">Karel.hint1_7</note>
      </trans-unit>
      <trans-unit id="835698657432741186" datatype="html">
        <source>I don't know how many shovelfuls of dirt this hole needs. Write a program that makes me fill it until it's even.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_7</note>
      </trans-unit>
      <trans-unit id="857707012901609467" datatype="html">
        <source>This level can be solved with %1 blocks.</source>
        <note priority="1" from="description">alert - This is displayed when the user has used more blocks than is necessary.</note>
        <note priority="1" from="meaning">Maze.numBlocksNeeded</note>
      </trans-unit>
      <trans-unit id="885793977251639445" datatype="html">
        <source>pickup tower</source>
        <note priority="1" from="description">Place a tower up off the ground</note>
        <note priority="1" from="meaning">Karel.pickupTower</note>
      </trans-unit>
      <trans-unit id="891558608688107783" datatype="html">
        <source>You need to use the "move" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">BlocklyApps.moveError2Msg</note>
      </trans-unit>
      <trans-unit id="893046754428386132" datatype="html">
        <source>degrees</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.degrees</note>
      </trans-unit>
      <trans-unit id="930197323711081029" datatype="html">
        <source>The "repeat" block saves you from having to repeat yourself.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.repeatError1Msg</note>
      </trans-unit>
      <trans-unit id="937206555427142541" datatype="html">
        <source> Run Program</source>
        <note priority="1" from="description">button label - Pressing the button runs the computer program the user has written.</note>
        <note priority="1" from="meaning">Karel.runProgram</note>
      </trans-unit>
      <trans-unit id="944147994515603046" datatype="html">
        <source>Makes the player do what the blocks say.</source>
        <note priority="1" from="description">tooltip - Pressing this button runs the computer program the user has written to move the player through the level.</note>
        <note priority="1" from="meaning">Bird.runTooltip</note>
      </trans-unit>
      <trans-unit id="968123423114261681" datatype="html">
        <source>Lifts or lowers the pen, to start or stop drawing.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.penTooltip</note>
      </trans-unit>
      <trans-unit id="979916318881432671" datatype="html">
        <source>put down 5</source>
        <note priority="1" from="description">place 5 balls on the square.</note>
        <note priority="1" from="meaning">Karel.putDown5</note>
      </trans-unit>
      <trans-unit id="1013045213595604872" datatype="html">
        <source>move forward by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveForward</note>
      </trans-unit>
      <trans-unit id="1088860343795162652" datatype="html">
        <source>You need a "count with" block to give the counter values from 25 through 60.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError1Msg-p2-l7</note>
      </trans-unit>
      <trans-unit id="1119634461436279338" datatype="html">
        <source>Open the "Math" block, pull out a number block, and add the block to your "draw a house" block.  Don't forget to change the value from 0.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseWithParameterError2Msg</note>
      </trans-unit>
      <trans-unit id="1129624636896695060" datatype="html">
        <source>while</source>
        <note priority="1" from="description">verb - imperative or infinitive to repeat the following commands.  The phrase is followed by the symbol denoting the end of the maze.</note>
        <note priority="1" from="meaning">Karel.repeatWhileCurrentNotClear</note>
      </trans-unit>
      <trans-unit id="1146327621590900127" datatype="html">
        <source>hide turtle</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.hideTurtle</note>
      </trans-unit>
      <trans-unit id="1172439927119127041" datatype="html">
        <source>Open the Actions category to Get the "jump forward" block, and use it to move the turtle between each snowman.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.jumpError2Msg</note>
      </trans-unit>
      <trans-unit id="1190064103412776740" datatype="html">
        <source>Repeat the enclosed actions until finish point is reached.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Repeat the enclosed commands until the maze has been successfully completed (the end point reached).</note>
        <note priority="1" from="meaning">Maze.whileTooltip</note>
      </trans-unit>
      <trans-unit id="1224478900937224235" datatype="html">
        <source>I will have to turn left when I cannot go straight. Use an 'if' block to see if their is a path in another direction.</source>
        <note priority="1" from="description">instructions - 'turn left' refers to rotating in place a quarter circle counter-clockwise. An example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions5_m1</note>
      </trans-unit>
      <trans-unit id="1269926501111815369" datatype="html">
        <source>Modify this program with the "counter" block (found in the Variables category) to draw the same series of squares with fewer blocks than on the previous level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_6</note>
      </trans-unit>
      <trans-unit id="1290859655665631564" datatype="html">
        <source>repeat until finish</source>
        <note priority="1" from="description">verb - imperative or infinitive to repeat the following commands.  The phrase is followed by the symbol denoting the end of the maze.</note>
        <note priority="1" from="meaning">Karel.repeatUntilFinish</note>
      </trans-unit>
      <trans-unit id="1314824175498929624" datatype="html">
        <source>Try one or more of the blocks below to solve this level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Maze.missingBlocksErrorMsg</note>
      </trans-unit>
      <trans-unit id="1319674777140835969" datatype="html">
        <source>The "set color" and "random color" blocks give you random (unpredictable) colors.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.colour_randomError1Msg</note>
      </trans-unit>
      <trans-unit id="1359456544648181295" datatype="html">
        <source>Changes the width of the pen.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.widthTooltip</note>
      </trans-unit>
      <trans-unit id="1399952097514285938" datatype="html">
        <source>Continue</source>
        <note priority="1" from="description">button - Closes the dialog and continues to the next level</note>
        <note priority="1" from="meaning">Karel.continue</note>
      </trans-unit>
      <trans-unit id="1403216201183693124" datatype="html">
        <source>Can you find a solution using 2 blocks? Try using the given function(s).</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_2</note>
      </trans-unit>
      <trans-unit id="1436544508617099405" datatype="html">
        <source>To use your "draw a triangle" function, open the "Functions" category and pull out a "draw a triangle" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawATriangleError2Msg-p3</note>
      </trans-unit>
      <trans-unit id="1446396878836001668" datatype="html">
        <source>Make me fill in the hole at the end of the field, using as few blocks as possible.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_8</note>
      </trans-unit>
      <trans-unit id="1455178279506102440" datatype="html">
        <source>Reach the goal using only five blocks.</source>
        <note priority="1" from="description">instructions - the goal is reaching the end point in a maze; 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions11_m2</note>
      </trans-unit>
      <trans-unit id="1485071260870460183" datatype="html">
        <source>You need the "counter" block to draw lines of different lengths.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError1Msg-p2-l7</note>
      </trans-unit>
      <trans-unit id="1509846721669566156" datatype="html">
        <source>Can you find a solution using 4 blocks? Try putting a loop inside of another loop. Remember, loop blocks are green.</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over.</note>
        <note priority="1" from="meaning">Karel.hint1_5</note>
      </trans-unit>
      <trans-unit id="1512215546838972550" datatype="html">
        <source>You can get the "draw a snowman" block from the "Functions" category.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.draw_a_snowmanError2Msg</note>
      </trans-unit>
      <trans-unit id="1532160610780148030" datatype="html">
        <source>path to the right</source>
        <note priority="1" from="description">condensed form of 'if there is a path to the right', as in: 'if path to the right, turn right'.</note>
        <note priority="1" from="meaning">Karel.pathRight</note>
      </trans-unit>
      <trans-unit id="1608455486645200520" datatype="html">
        <source>You added an input to "draw a triangle".  Now you need to change its name to "length".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefWithLengthParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="1684799485624969709" datatype="html">
        <source>Pull out the "set color" block that contains a "random color" block, and put it in the appropriate place.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.colour_randomError2Msg</note>
      </trans-unit>
      <trans-unit id="1686883036031489642" datatype="html">
        <source>Logic</source>
        <note priority="1" from="description">category - Blocks related to [https://code.google.com/p/blockly/wiki/Logic logic].</note>
        <note priority="1" from="meaning">Apps.catLogic</note>
      </trans-unit>
      <trans-unit id="1723653480121525311" datatype="html">
        <source>Remove unused empty blocks.</source>
        <note priority="1" from="description">alert - This error message is displayed when the user has added blocks with nothing nested inside them (e.g. repeat or if blocks).</note>
        <note priority="1" from="meaning">BlocklyApps.emptyBlocksErrorMsg</note>
      </trans-unit>
      <trans-unit id="1735010517448028234" datatype="html">
        <source>CS First: Turtle Graphics %1</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.title</note>
      </trans-unit>
      <trans-unit id="1740099458630159531" datatype="html">
        <source>You have <x id="START_SPAN"/>1<x id="END_SPAN"/> block left.</source>
        <note priority="1" from="description">warning - Only one more block may be added.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase and replace 1 with one or more words.</note>
        <note priority="1" from="meaning">Maze.capacity1</note>
      </trans-unit>
      <trans-unit id="1757525824513667617" datatype="html">
        <source>You need to use at least %1 different colors on this level.  You used only %2.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.tooFewColours</note>
      </trans-unit>
      <trans-unit id="1759106504444276359" datatype="html">
        <source>Color</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catColour</note>
      </trans-unit>
      <trans-unit id="1775354388524175835" datatype="html">
        <source>That's right! Good job.</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Karel.q4right</note>
      </trans-unit>
      <trans-unit id="1791699700782054375" datatype="html">
        <source>Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.</source>
        <note priority="1" from="description">tooltip - Move in the direction of the given angle, where 0 means going horizontally to the right, and 90 straight up and 270 straight down.</note>
        <note priority="1" from="meaning">Bird.headingTooltip</note>
      </trans-unit>
      <trans-unit id="1839351898941564168" datatype="html">
        <source>Open the Functions category, and pull out a "do something" block, and fill it in.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.defineAnythingErrorMsg2</note>
      </trans-unit>
      <trans-unit id="1851166057196506938" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Maze.q3wrong</note>
      </trans-unit>
      <trans-unit id="1858924537397543770" datatype="html">
        <source>You need to use a "count with" block on this level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError1Msg-p3-l9</note>
      </trans-unit>
      <trans-unit id="1871190326975133337" datatype="html">
        <source>A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.</source>
        <note priority="1" from="description">instructions - the word 'program' refers to a computer program, and the words for 'stack' and 'blocks' should be the same as for stacking children's blocks. Use the imperative verb form appropriate for speaking to a child, gender unspecified.  If no gender-neutral singular/familiar form exists but a gender-neutral plural/formal form exists, use that instead.</note>
        <note priority="1" from="meaning">Maze.instructions2_m2</note>
      </trans-unit>
      <trans-unit id="1921114589161044058" datatype="html">
        <source>If-else blocks will do one thing or the other.</source>
        <note priority="1" from="description">instructions - 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions17_m2</note>
      </trans-unit>
      <trans-unit id="1930180861983081233" datatype="html">
        <source>You have<x id="START_SPAN"/>0<x id="END_SPAN"/> blocks left.</source>
        <note priority="1" from="description">warning - No more blocks may be added until some are removed.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase and replace 0 with one or more words.</note>
        <note priority="1" from="meaning">Karel.capacity0</note>
      </trans-unit>
      <trans-unit id="2027826841571701243" datatype="html">
        <source>What should I do to follow the path?</source>
        <note priority="1" from="description">instructions - 'steps' refers to instructions in a computer program; 'path' refers to the path through a maze. See previous description for tense.</note>
        <note priority="1" from="meaning">Maze.instructions2_m1</note>
      </trans-unit>
      <trans-unit id="2036891947084818245" datatype="html">
        <source>Congratulations! You have solved the final level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the most difficult level.</note>
        <note priority="1" from="meaning">Bird.finalLevel</note>
      </trans-unit>
      <trans-unit id="2068934426839021744" datatype="html">
        <source> Reset</source>
        <note priority="1" from="description">button label - Pressing the button causes Pegman return to the start of the maze (but does not delete the user's program.)</note>
        <note priority="1" from="meaning">Karel.resetProgram</note>
      </trans-unit>
      <trans-unit id="2144789925684885720" datatype="html">
        <source>See generated JavaScript code.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.codeTooltip</note>
      </trans-unit>
      <trans-unit id="2149839397262503913" datatype="html">
        <source>if path to the left</source>
        <note priority="1" from="description">condensed form of 'if there is a path to the left', as in: 'if path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.pathLeft</note>
      </trans-unit>
      <trans-unit id="2194902007208446636" datatype="html">
        <source>Save and link to blocks.</source>
        <note priority="1" from="description">tooltip (pop-up help) for button; pressing the button causes the user's program to be saved and for a URL to be provided for retrieving it.  The word 'blocks' is as in children's toy blocks.</note>
        <note priority="1" from="meaning">Maze.linkTooltip</note>
      </trans-unit>
      <trans-unit id="2205565297285143303" datatype="html">
        <source>Click on the blue "+" next to "to draw a house" and change the name of the input to "height".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.houseDefWithHeightParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="2217723091646625095" datatype="html">
        <source>Can you find a solution by adding 8 blocks in the "avoid the cow and remove 1" block?</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_7</note>
      </trans-unit>
      <trans-unit id="2225530758220824313" datatype="html">
        <source>do</source>
        <note priority="1" from="description">block text - Imperative or infinitive of a verb preceding one or more commands to a person.  This is part of [https://code.google.com/p/blockly/wiki/Loops#repeat repeat] and [https://code.google.com/p/blockly/wiki/IfElse#If_blocks if] blocks.</note>
        <note priority="1" from="meaning">Bird.doCode</note>
      </trans-unit>
      <trans-unit id="2412547971116978730" datatype="html">
        <source>Try to reach the end of this path using only three blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions10_m2</note>
      </trans-unit>
      <trans-unit id="2417017472983826220" datatype="html">
        <source>W</source>
        <note priority="1" from="description">An abbreviation of the direction West</note>
        <note priority="1" from="meaning">Maze.dirW</note>
      </trans-unit>
      <trans-unit id="2435975013332877329" datatype="html">
        <source>The shown code tells the turtle <x id="START_EMPHASIS"/>how<x id="END_EMPHASIS"/> to draw a square but not to draw a square.  You need to pull out a "draw a square" block from the Functions category.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASquareError1Msg-p3</note>
      </trans-unit>
      <trans-unit id="2439987364230414617" datatype="html">
        <source>Congratulations! You have solved the final level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the most difficult level.</note>
        <note priority="1" from="meaning">Maze.finalLevelMsg</note>
      </trans-unit>
      <trans-unit id="2474085568402349508" datatype="html">
        <source>You need to provide an input when you use the "draw a house" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseWithParameterError1Msg</note>
      </trans-unit>
      <trans-unit id="2514512353294408421" datatype="html">
        <source>You need to add a "height" input to your function definition. The first step is clicking on the blue "+" next to "to draw a house".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.houseDefWithParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="2561306449483326985" datatype="html">
        <source>Text</source>
        <note priority="1" from="description">category - Blocks related to [https://code.google.com/p/blockly/wiki/Text text processing].</note>
        <note priority="1" from="meaning">Apps.catText</note>
      </trans-unit>
      <trans-unit id="2570539532822249158" datatype="html">
        <source>Sorry, '%1' doesn't correspond with any saved program.</source>
        <note priority="1" from="description">alert - A request to retrieve a stored program does not have a valid URL. %1 is the invalid portion of the URL.</note>
        <note priority="1" from="meaning">Apps.hashError</note>
      </trans-unit>
      <trans-unit id="2599109327728834397" datatype="html">
        <source>Reset</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.resetProgram</note>
      </trans-unit>
      <trans-unit id="2611769440555818823" datatype="html">
        <source>Try to reach the end of this path using only two repeat blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions8_m2</note>
      </trans-unit>
      <trans-unit id="2613267230562876277" datatype="html">
        <source>Now create a "draw a house" function and use it house two cats.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_5</note>
      </trans-unit>
      <trans-unit id="2626285025666421506" datatype="html">
        <source>Can you find a solution using 4 blocks? Try including an if block.</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over.</note>
        <note priority="1" from="meaning">Karel.hint1_10</note>
      </trans-unit>
      <trans-unit id="2628042409644952537" datatype="html">
        <source>Congratulations! Are you ready to proceed to level %1?</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the level, inviting them to precede to the next level of difficulty.  %1 is an integer greater than 1.</note>
        <note priority="1" from="meaning">Bird.nextLevel</note>
      </trans-unit>
      <trans-unit id="2644808704881231557" datatype="html">
        <source>Loops</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.catControl</note>
      </trans-unit>
      <trans-unit id="2672041123505998510" datatype="html">
        <source>Turns me left or right by 90 degrees.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Pegman is the humanoid icon used in Google Maps. See picture at http://goo.gl/9I64i (http://maps.google.com/intl/en/help/maps/streetview/learn/pegman.html). The term 'space' refers to a single square within a maze.</note>
        <note priority="1" from="meaning">Maze.turnTooltip</note>
      </trans-unit>
      <trans-unit id="2675463684838806294" datatype="html">
        <source>An 'if' condition will do something only if the condition is true.  Try turning left if there is a path to the left.</source>
        <note priority="1" from="description">instructions - an example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions6_m1</note>
      </trans-unit>
      <trans-unit id="2683860693885209607" datatype="html">
        <source>If there is a path in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.</source>
        <note priority="1" from="description">tooltip (pop-up help) - 'path' refers to a path through a maze.</note>
        <note priority="1" from="meaning">Karel.ifelseTooltip</note>
      </trans-unit>
      <trans-unit id="2747644752560746187" datatype="html">
        <source> S</source>
        <note priority="1" from="description">An abbreviation of the direction North</note>
        <note priority="1" from="meaning">Karel.dirS</note>
      </trans-unit>
      <trans-unit id="2762549004539079372" datatype="html">
        <source>Try using the blocks to help me remove all the piles and fill in all the holes on the ground.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_1</note>
      </trans-unit>
      <trans-unit id="2765665419557326891" datatype="html">
        <source>Draw whatever you want.  One idea is experimenting with different types of spirals.  What happens if you change the turn amount, rather than the move amount?  TODO: Add starting blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_10</note>
      </trans-unit>
      <trans-unit id="2801052495540198573" datatype="html">
        <source>turn right</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person turning his head and body one quarter rotation clockwise. Prefer a translation that has text in common with the translation of 'turn left'.  See [[Translating:Blockly#Drop-Down_Menus]].</note>
        <note priority="1" from="meaning">Maze.turnRight</note>
      </trans-unit>
      <trans-unit id="2825528106134845336" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Maze.q9wrong</note>
      </trans-unit>
      <trans-unit id="2835206376100898481" datatype="html">
        <source>Computers have limited memory. Reach the end of this path using only two blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions3_m1</note>
      </trans-unit>
      <trans-unit id="2865770337752480735" datatype="html">
        <source>That's right!</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Karel.q10right</note>
      </trans-unit>
      <trans-unit id="2896628430654152071" datatype="html">
        <source>Oops.  It looks like you no longer have a block to tell the turtle how to draw a triangle.  Try reloading the page.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefErrorMsg1</note>
      </trans-unit>
      <trans-unit id="3042157832321644942" datatype="html">
        <source>An 'if' condition will do something only if the condition is true.  Try turning right if there is a path to the right.</source>
        <note priority="1" from="description">instructions - an example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions16_m2</note>
      </trans-unit>
      <trans-unit id="3072368140058022895" datatype="html">
        <source>draw a square</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASquare</note>
      </trans-unit>
      <trans-unit id="3104186656897426489" datatype="html">
        <source> W</source>
        <note priority="1" from="description">An abbreviation of the direction West</note>
        <note priority="1" from="meaning">Karel.dirW</note>
      </trans-unit>
      <trans-unit id="3122932360783439547" datatype="html">
        <source>do</source>
        <note priority="1" from="description">verb - imperative or infinitive preceding one or more commands to a person.</note>
        <note priority="1" from="meaning">Karel.doCode</note>
      </trans-unit>
      <trans-unit id="3164275452307531104" datatype="html">
        <source>You can now see how the "draw a square" and "draw a circle" functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the "draw a square" block to actually draw a square.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_1</note>
      </trans-unit>
      <trans-unit id="3181959031791140906" datatype="html">
        <source>You need the "counter" block to draw houses of different heights.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError1Msg-p3</note>
      </trans-unit>
      <trans-unit id="3223726278708627011" datatype="html">
        <source>Remove empty blocks.</source>
        <note priority="1" from="description">alert - This error message is displayed when the user has added blocks with nothing nested inside them (e.g. repeat or if blocks).</note>
        <note priority="1" from="meaning">BlocklyApps.emptyBlocksErrorMsg</note>
      </trans-unit>
      <trans-unit id="3240270778677373214" datatype="html">
        <source>You got it!</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.rightAnswer</note>
      </trans-unit>
      <trans-unit id="3260794418245103523" datatype="html">
        <source>See generated JavaScript code.</source>
        <note priority="1" from="description">tooltip (pop-up help) for button; pressing the button causes a program in the JavaScript computer language to be displayed, based on the program created by the user.</note>
        <note priority="1" from="meaning">Karel.codeTooltip</note>
      </trans-unit>
      <trans-unit id="3269298963580773141" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Karel.q4wrong</note>
      </trans-unit>
      <trans-unit id="3269367049188261668" datatype="html">
        <source>Can you figure out how draw this triangle and square?</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_6</note>
      </trans-unit>
      <trans-unit id="3279501947911403228" datatype="html">
        <source>Variables</source>
        <note priority="1" from="description">category - Blocks related to [https://code.google.com/p/blockly/wiki/Variables variables].</note>
        <note priority="1" from="meaning">Apps.catVariables</note>
      </trans-unit>
      <trans-unit id="3293197141663117591" datatype="html">
        <source>if path ahead</source>
        <note priority="1" from="description">condensed form of 'if there is a path ahead', as in: 'if path ahead, go forward'.</note>
        <note priority="1" from="meaning">Maze.pathAhead</note>
      </trans-unit>
      <trans-unit id="3361011873644589927" datatype="html">
        <source>You need the "counter" block to draw snowmen of different heights.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError1Msg-p2-l9</note>
      </trans-unit>
      <trans-unit id="3389423800139214515" datatype="html">
        <source>See if you can draw these green glasses.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_7</note>
      </trans-unit>
      <trans-unit id="3429416367000404237" datatype="html">
        <source>Open the Loops category, and drag out a "count with" block. Have it count from 110 to 70 by 10.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError2Msg-p2-l9</note>
      </trans-unit>
      <trans-unit id="3456647281718039043" datatype="html">
        <source>while</source>
        <note priority="1" from="description">condensed form of 'while something is true'</note>
        <note priority="1" from="meaning">Karel.while</note>
      </trans-unit>
      <trans-unit id="3500022406756128689" datatype="html">
        <source>When using the "draw a triangle" block, you need to provide an input that says how big the triangle should be.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleCallWithNumericParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="3518504260884370609" datatype="html">
        <source>Moves the turtle forward.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveForwardTooltip</note>
      </trans-unit>
      <trans-unit id="3552165757021173739" datatype="html">
        <source>draw a snowman</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASnowman</note>
      </trans-unit>
      <trans-unit id="3556887539065550515" datatype="html">
        <source>Reach the goal using only five blocks.</source>
        <note priority="1" from="description">instructions - the goal is reaching the end point in a maze; 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions4_m1</note>
      </trans-unit>
      <trans-unit id="3561533632409117166" datatype="html">
        <source>Turtle 1</source>
        <note priority="1" from="description">brief title - Specifies that this is Blockly's '''Turtle 1''' tutorial.</note>
        <note priority="1" from="meaning">Turtle.turtle1</note>
      </trans-unit>
      <trans-unit id="3588216907330252079" datatype="html">
        <source>The "jump forward" block moves the turtle without drawing anything.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.jumpError1Msg</note>
      </trans-unit>
      <trans-unit id="3597718516419494722" datatype="html">
        <source>no path to the left</source>
        <note priority="1" from="description">condensed form of 'if there is a no path to the left', as in: 'if no path to the left, turn left'.</note>
        <note priority="1" from="meaning">Karel.noPathLeft</note>
      </trans-unit>
      <trans-unit id="3632412895405257529" datatype="html">
        <source>Can you find a solution using 6 blocks? Try including 2 if blocks.</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over.</note>
        <note priority="1" from="meaning">Karel.hint1_11</note>
      </trans-unit>
      <trans-unit id="3639152755537095722" datatype="html">
        <source>Use the function, "avoid the cow and remove 1", to help me remove all the piles.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_8</note>
      </trans-unit>
      <trans-unit id="3642603709514258121" datatype="html">
        <source>Turns the turtle right by the specified angle.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnRightTooltip</note>
      </trans-unit>
      <trans-unit id="3657739590130191860" datatype="html">
        <source>I'll need to turn right by 90 degrees to draw this picture.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveForwardError2Msg</note>
      </trans-unit>
      <trans-unit id="3771855446538103843" datatype="html">
        <source>Oops.  You seem to have deleted or renamed the provided "draw a house" function.  Reload the page to get it back.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.defineDrawAHouseErrorMsg1-l7</note>
      </trans-unit>
      <trans-unit id="3784721066365313721" datatype="html">
        <source>Repeat the enclosed actions until finish point is reached.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Repeat the enclosed commands until the maze has been successfully completed (the end point reached).</note>
        <note priority="1" from="meaning">Karel.whileTooltip</note>
      </trans-unit>
      <trans-unit id="3844507338825329004" datatype="html">
        <source>Try again</source>
        <note priority="1" from="description">button - Closes the dialog and stays on the current level</note>
        <note priority="1" from="meaning">Maze.tryAgain</note>
      </trans-unit>
      <trans-unit id="3845396636292035869" datatype="html">
        <source>Help</source>
        <note priority="1" from="description">The label on a button the user can press for help.\n{lb}{lb}Identical|Help{rb}{rb}</note>
        <note priority="1" from="meaning">BlocklyApps.help</note>
      </trans-unit>
      <trans-unit id="3846752408201513826" datatype="html">
        <source>Try to reach the end of this path using only two repeat blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions7_m2</note>
      </trans-unit>
      <trans-unit id="3861275221935187198" datatype="html">
        <source>That's right!</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Maze.q3right</note>
      </trans-unit>
      <trans-unit id="3869139555508242409" datatype="html">
        <source>I will have to turn right when I cannot go straight. Use an 'if' block to see if their is a path in another direction.</source>
        <note priority="1" from="description">instructions - 'turn left' refers to rotating in place a quarter circle counter-clockwise. An example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions14_m2</note>
      </trans-unit>
      <trans-unit id="3894348704720770733" datatype="html">
        <source>Click on the blue "+" next to "to draw a triangle" and change the name of the input to "length".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefWithLengthParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="3911570462840508551" datatype="html">
        <source>Use a "count with" loop to draw a family of snowmen with heights of 110, 100, 90, 80, and 70 dots, each 60 dots apart.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_9</note>
      </trans-unit>
      <trans-unit id="3919378580309876148" datatype="html">
        <source>Changes the color of the pen.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.colourTooltip</note>
      </trans-unit>
      <trans-unit id="3929450303285114841" datatype="html">
        <source>path is blocked</source>
        <note priority="1" from="description">condensed form of 'if there is a no path ahead', as in: 'if no path ahead, go forward'.</note>
        <note priority="1" from="meaning">Karel.noPathAhead</note>
      </trans-unit>
      <trans-unit id="3936141318735699010" datatype="html">
        <source>There is a solution using only 3 blocks. Can you find it? Did you try the new option on the while block?</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over. The red marker is the goal to be reached in the maze.</note>
        <note priority="1" from="meaning">Karel.hint1_6</note>
      </trans-unit>
      <trans-unit id="3955830168312699055" datatype="html">
        <source>From the current code, the turtle doesn't know that you want to draw a square. Pull out a "draw a square" block from the Functions category.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASquareError2Msg-p3</note>
      </trans-unit>
      <trans-unit id="3964361619617826429" datatype="html">
        <source>OK</source>
        <note priority="1" from="description">Label on button for user to press when done reading help information.\n{lb}{lb}Identical|OK{rb}{rb}</note>
        <note priority="1" from="meaning">Apps.dialogOk</note>
      </trans-unit>
      <trans-unit id="3967637322018343666" datatype="html">
        <source> No</source>
        <note priority="1" from="description">No indicates that this option is false and incorrect.</note>
        <note priority="1" from="meaning">Karel.no</note>
      </trans-unit>
      <trans-unit id="3990974763608318007" datatype="html">
        <source>Use a "count with" block and your code from the previous level to draw houses of size 50, 100, and 150 in different colors.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_9</note>
      </trans-unit>
      <trans-unit id="4025711230282642462" datatype="html">
        <source>Continue</source>
        <note priority="1" from="description">button - Closes the dialog and continues to the next level</note>
        <note priority="1" from="meaning">Turtle.continue</note>
      </trans-unit>
      <trans-unit id="4038729554513968964" datatype="html">
        <source>That's right!</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Maze.q9right</note>
      </trans-unit>
      <trans-unit id="4050999966626457535" datatype="html">
        <source>there is a pile</source>
        <note priority="1" from="description">Indicates the presence of at least one ball, as in 'he brought a ball, there are now balls present'</note>
        <note priority="1" from="meaning">Karel.ballsPresent</note>
      </trans-unit>
      <trans-unit id="4051416073809352347" datatype="html">
        <source>On this level, you need to stack together all of the blocks in the white workspace.</source>
        <note priority="1" from="description">alert - This is displayed if a user attempts to run a program composed of multiple stacks of blocks, letting them know they need to create a single stack.</note>
        <note priority="1" from="meaning">Maze.oneTopBlock</note>
      </trans-unit>
      <trans-unit id="4083979993945840021" datatype="html">
        <source>A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.</source>
        <note priority="1" from="description">instructions - the word 'program' refers to a computer program, and the words for 'stack' and 'blocks' should be the same as for stacking children's blocks. Use the imperative verb form appropriate for speaking to a child, gender unspecified.  If no gender-neutral singular/familiar form exists but a gender-neutral plural/formal form exists, use that instead.</note>
        <note priority="1" from="meaning">Maze.instructions1_m2</note>
      </trans-unit>
      <trans-unit id="4105282775454076680" datatype="html">
        <source>Replace the pale (disabled) blocks with a "count with" block (in the Loops category) and "counter" block (in the Variables category) to draw the same spiral.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_7</note>
      </trans-unit>
      <trans-unit id="4138774728570944645" datatype="html">
        <source>move forward</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person moving (walking) in the direction he/she is facing.</note>
        <note priority="1" from="meaning">Maze.moveForward</note>
      </trans-unit>
      <trans-unit id="4186339348439406093" datatype="html">
        <source>Functions</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.catProcedures</note>
      </trans-unit>
      <trans-unit id="4190754164128379813" datatype="html">
        <source>Use the new "draw a square" block, found in the "Functions" category, to draw a small green square.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_2</note>
      </trans-unit>
      <trans-unit id="4294783477990312138" datatype="html">
        <source>move backward by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveBackward</note>
      </trans-unit>
      <trans-unit id="4313402333478865653" datatype="html">
        <source>Run</source>
        <note priority="1" from="description">button label - Pressing the button runs the computer program the user has written.</note>
        <note priority="1" from="meaning">Maze.runProgram</note>
      </trans-unit>
      <trans-unit id="4318072147009246027" datatype="html">
        <source>You got it right!</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Karel.q5right</note>
      </trans-unit>
      <trans-unit id="4371937298187029166" datatype="html">
        <source>Can you find a solution using 3 blocks? Try using the given function(s) inside a while block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_3</note>
      </trans-unit>
      <trans-unit id="4396755987596871156" datatype="html">
        <source>It's still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_11</note>
      </trans-unit>
      <trans-unit id="4415678893021929841" datatype="html">
        <source>Use the new function, "remove 1 and avoid the cow", to make me level out the piles.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_11</note>
      </trans-unit>
      <trans-unit id="4450982325178778764" datatype="html">
        <source>Now that you created a "draw a house" function, you need to call it.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseError1Msg</note>
      </trans-unit>
      <trans-unit id="4451667761105342733" datatype="html">
        <source>Define a new function that removes 7 shovelfuls. Then use it to write a program that helps me remove all the piles.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_4</note>
      </trans-unit>
      <trans-unit id="4466869966303893630" datatype="html">
        <source>jump backward by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.jumpBackward</note>
      </trans-unit>
      <trans-unit id="4484807843145669710" datatype="html">
        <source>Continue</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.gotoNext</note>
      </trans-unit>
      <trans-unit id="4502337278497104660" datatype="html">
        <source>Each "set color" block sets the color of everything I draw after it until the next "set color" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawColourError2Msg</note>
      </trans-unit>
      <trans-unit id="4508813770167576081" datatype="html">
        <source>hungry</source>
        <note priority="1" from="description">block text - Experiencing a desire or need for food.</note>
        <note priority="1" from="meaning">Bird.hungry</note>
      </trans-unit>
      <trans-unit id="4536361039378989928" datatype="html">
        <source>Loops</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catControl</note>
      </trans-unit>
      <trans-unit id="4542091680501997160" datatype="html">
        <source>Use the "repeat" block to draw 3 squares of size 100, each 120 degrees apart, in random colors.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_3</note>
      </trans-unit>
      <trans-unit id="4558854102588819977" datatype="html">
        <source>Can you find a solution using only 4 blocks? Try using one of the green loop blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint1_4</note>
      </trans-unit>
      <trans-unit id="4587493155338925060" datatype="html">
        <source><x id="START_STRONG"/>Remember:<x id="END_STRONG"/><x id="START_UNORDERED_LIST"/><x id="START_ITEM"/>'repeat' blocks perform an action multiple times without additional blocks.<x id="END_ITEM"/><x id="START_ITEM"/>'if' blocks check if there is a path in a certain direction.<x id="END_ITEM"/><x id="END_UNORDERED_LIST"/></source>
        <note priority="1" from="description">instructions - A 'repeat' block is used to repeat blocks over and over. </note>
        <note priority="1" from="meaning">Maze.reinfMsg6</note>
      </trans-unit>
      <trans-unit id="4620014288495568335" datatype="html">
        <source>Bird</source>
        <note priority="1" from="description">title - Specifies that this is Blockly's '''Bird''' tutorial.</note>
        <note priority="1" from="meaning">Bird.bird</note>
      </trans-unit>
      <trans-unit id="4631390832124082181" datatype="html">
        <source> Yes</source>
        <note priority="1" from="description">Yes indicates that this option is true and correct.</note>
        <note priority="1" from="meaning">Karel.yes</note>
      </trans-unit>
      <trans-unit id="4632342053860970836" datatype="html">
        <source>Using the "draw a square" function as an example, create a "draw a triangle" function and use it.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_2</note>
      </trans-unit>
      <trans-unit id="4665377803800626052" datatype="html">
        <source>I'll need to turn in order to draw this picture.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnError1Msg</note>
      </trans-unit>
      <trans-unit id="4681550222060335431" datatype="html">
        <source>You need to open the "Loops" drawer and pull out a "count with" block to count from 50 to 150 by 50s.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError2Msg-p3-l9</note>
      </trans-unit>
      <trans-unit id="4697713989113795415" datatype="html">
        <source>You are using all of the necessary types of blocks, but you'll need more blocks to complete this level.</source>
        <note priority="1" from="description">alert - The user has not completed the level, is using all of the necessary types of blocks, but needs more of these types of blocks to complete the level.</note>
        <note priority="1" from="meaning">Turtle.tooFewBlocksMsg</note>
      </trans-unit>
      <trans-unit id="4709750626480130936" datatype="html">
        <source>There is a solution using only 3 blocks. Can you find it? Did you using the repeat block?</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over.</note>
        <note priority="1" from="meaning">Karel.hint1_3</note>
      </trans-unit>
      <trans-unit id="4720767904170811699" datatype="html">
        <source>Try again</source>
        <note priority="1" from="description">button - Closes the dialog and stays on the current level</note>
        <note priority="1" from="meaning">Karel.tryAgain</note>
      </trans-unit>
      <trans-unit id="4724012534321746997" datatype="html">
        <source>You need to create a function.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.defineAnythingErrorMsg1</note>
      </trans-unit>
      <trans-unit id="4732731109682389752" datatype="html">
        <source>Move me to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_3</note>
      </trans-unit>
      <trans-unit id="4750733923757450011" datatype="html">
        <source>If-else blocks will do one thing or the other.</source>
        <note priority="1" from="description">instructions - 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions9_m1</note>
      </trans-unit>
      <trans-unit id="4753589449668334621" datatype="html">
        <source>Draw squares with sides of 50, 60, 70, 80, and 90 dots.  You'll need lots of blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_5</note>
      </trans-unit>
      <trans-unit id="4759344206359831354" datatype="html">
        <source>Put the player back at the start of the level.</source>
        <note priority="1" from="description">tooltip - Pressing this button restores the player to the start position and enables the user's program to be run again.</note>
        <note priority="1" from="meaning">Bird.resetTooltip</note>
      </trans-unit>
      <trans-unit id="4766959190843605239" datatype="html">
        <source>Use a "turn" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnError2Msg</note>
      </trans-unit>
      <trans-unit id="4782149863250976860" datatype="html">
        <source>path ahead</source>
        <note priority="1" from="description">condensed form of 'if there is a path ahead', as in: 'if path ahead, go forward'.</note>
        <note priority="1" from="meaning">Karel.pathAhead</note>
      </trans-unit>
      <trans-unit id="4784887992793201145" datatype="html">
        <source>Congratulations! You have solved the final level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the most difficult level.</note>
        <note priority="1" from="meaning">Karel.finalLevel</note>
      </trans-unit>
      <trans-unit id="4787297942415818764" datatype="html">
        <source>there is a hole</source>
        <note priority="1" from="description">Indicates the lack of any balls, as in 'she took the last ball, there are now no balls present'</note>
        <note priority="1" from="meaning">Karel.holesPresent</note>
      </trans-unit>
      <trans-unit id="4874525273235336318" datatype="html">
        <source>If there is a path in the specified direction, then do some actions.</source>
        <note priority="1" from="description">tooltip (pop-up help) - 'path' refers to a path through a maze. </note>
        <note priority="1" from="meaning">Maze.ifTooltip</note>
      </trans-unit>
      <trans-unit id="4947809466496978707" datatype="html">
        <source>Farmer&amp;nbsp;&amp;nbsp;<x id="PAGE"/></source>
        <note priority="1" from="description">brief title - Specifies that this is Blockly's '''Maze''' tutorial.</note>
        <note priority="1" from="meaning">Karel.maze</note>
      </trans-unit>
      <trans-unit id="4959294479950236180" datatype="html">
        <source>You added an input to "draw a house".  Now you need to change its name to "height".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.houseDefWithHeightParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="4975881527969825929" datatype="html">
        <source>counter</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.loopVariable</note>
      </trans-unit>
      <trans-unit id="5000330788075193694" datatype="html">
        <source>repeat until</source>
        <note priority="1" from="description">verb - imperative or infinitive to repeat the following commands.  The phrase is followed by the symbol denoting the end of the maze.</note>
        <note priority="1" from="meaning">Maze.repeatUntil</note>
      </trans-unit>
      <trans-unit id="5009244137319883689" datatype="html">
        <source>You need a "count with" block to give the counter values from 110 down to 70.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError1Msg-p2-l9</note>
      </trans-unit>
      <trans-unit id="5016192915600247436" datatype="html">
        <source>if</source>
        <note priority="1" from="description">Conditional statement, which evaluates to true or false.</note>
        <note priority="1" from="meaning">Bird.doIf</note>
      </trans-unit>
      <trans-unit id="5069046536746700962" datatype="html">
        <source>jump forward by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.jumpForward</note>
      </trans-unit>
      <trans-unit id="5077043002380185422" datatype="html">
        <source>Move me forward one space.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Pegman is the humanoid icon used in Google Maps. See picture at http://goo.gl/9I64i (http://maps.google.com/intl/en/help/maps/streetview/learn/pegman.html). The term 'space' refers to a single square within a maze.</note>
        <note priority="1" from="meaning">Maze.moveForwardTooltip</note>
      </trans-unit>
      <trans-unit id="5148447119737439401" datatype="html">
        <source>Actions</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catTurtle</note>
      </trans-unit>
      <trans-unit id="5188934812463846027" datatype="html">
        <source>Actions</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.catKarel</note>
      </trans-unit>
      <trans-unit id="5238516985457537713" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Karel.q10wrong</note>
      </trans-unit>
      <trans-unit id="5239330244422677114" datatype="html">
        <source>Save and link to blocks.</source>
        <note priority="1" from="description">tooltip (pop-up help) for button; pressing the button causes the user's program to be saved and for a URL to be provided for retrieving it.  The word 'blocks' is as in children's toy blocks.</note>
        <note priority="1" from="meaning">Karel.linkTooltip</note>
      </trans-unit>
      <trans-unit id="5254993033027233494" datatype="html">
        <source>You have <x id="START_SPAN"/>1<x id="END_SPAN"/> block left.</source>
        <note priority="1" from="description">warning - Only one more block may be added.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase and replace 1 with one or more words.</note>
        <note priority="1" from="meaning">Karel.capacity1</note>
      </trans-unit>
      <trans-unit id="5268364470656255036" datatype="html">
        <source>remove 1</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person picking up a ball.</note>
        <note priority="1" from="meaning">Karel.pickUpBall</note>
      </trans-unit>
      <trans-unit id="5270584232505283480" datatype="html">
        <source>From the "Variables" category, get the "counter" block, and use it as the input to the "draw a snowman" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError2Msg-p2-l9</note>
      </trans-unit>
      <trans-unit id="5277007024015341462" datatype="html">
        <source>dots</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.dots</note>
      </trans-unit>
      <trans-unit id="5321867710001300647" datatype="html">
        <source>Wrong!  Try again.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.wrongAnswer</note>
      </trans-unit>
      <trans-unit id="5343570361110533566" datatype="html">
        <source>Can you find a solution using fewer blocks? Try including two if blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_10</note>
      </trans-unit>
      <trans-unit id="5391382062551588177" datatype="html">
        <source>Save and link to blocks.</source>
        <note priority="1" from="description">tooltip - Clicking on this button will cause the current program to be saved and for a URL to be shown to later retrieve it.</note>
        <note priority="1" from="meaning">Apps.linkTooltip</note>
      </trans-unit>
      <trans-unit id="5453838756748900405" datatype="html">
        <source>On this level, you need to stack together all of the blocks in the white workspace.</source>
        <note priority="1" from="description">alert - This is displayed if a user attempts to run a program composed of multiple stacks of blocks, letting them know they need to create a single stack.</note>
        <note priority="1" from="meaning">Karel.oneTopBlock</note>
      </trans-unit>
      <trans-unit id="5457454918800758856" datatype="html">
        <source>Variables</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catVariables</note>
      </trans-unit>
      <trans-unit id="5477072746213052175" datatype="html">
        <source>Draw triangular fences around the cats and a square fence around the cow.  Tip: Test the program as you go along.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_3</note>
      </trans-unit>
      <trans-unit id="5489231927617615202" datatype="html">
        <source>Open the Functions category and get a "draw a square" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASquareError2Msg-p2</note>
      </trans-unit>
      <trans-unit id="5516352830551153056" datatype="html">
        <source>Draw a triangle and then a square to draw an envelope.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_5</note>
      </trans-unit>
      <trans-unit id="5529440814691185505" datatype="html">
        <source>Use only the blocks you need to get to complete the level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_1</note>
      </trans-unit>
      <trans-unit id="5532942470899034153" datatype="html">
        <source>Colour</source>
        <note priority="1" from="description">category - Blocks related to [https://code.google.com/p/blockly/wiki/Colour colour].</note>
        <note priority="1" from="meaning">Apps.catColour</note>
      </trans-unit>
      <trans-unit id="5618588968868147351" datatype="html">
        <source>E</source>
        <note priority="1" from="description">An abbreviation of the direction East</note>
        <note priority="1" from="meaning">Maze.dirE</note>
      </trans-unit>
      <trans-unit id="5630104567218363163" datatype="html">
        <source>See if you can figure out how to use "draw a square" and "draw a triangle" (and some other blocks) to draw a house around the lion.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_4</note>
      </trans-unit>
      <trans-unit id="5632419774153665014" datatype="html">
        <source>Can you find a solution using 4 blocks? Try using the given function(s).</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_6</note>
      </trans-unit>
      <trans-unit id="5658777069008500316" datatype="html">
        <source>Use one of the new functions to help me remove all of the piles on the ground with as few blocks as possible.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_9</note>
      </trans-unit>
      <trans-unit id="5669566230124297065" datatype="html">
        <source>while path ahead</source>
        <note priority="1" from="description">verb - imperative or infinitive to repeat the following commands.  The phrase is followed by the symbol denoting the end of the maze.</note>
        <note priority="1" from="meaning">Karel.repeatUntilBlocked</note>
      </trans-unit>
      <trans-unit id="5671132058369648806" datatype="html">
        <source>You need a "draw a triangle" block to let the turtle know you want it to draw a triangle.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawATriangleError1Msg-p3</note>
      </trans-unit>
      <trans-unit id="5672757975804035474" datatype="html">
        <source>Use the new functions, "fill 8" and "remove 8", to help me level out the pile and fill in the hole.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_6</note>
      </trans-unit>
      <trans-unit id="5683971278191761396" datatype="html">
        <source>Your "draw a triangle" function needs a "length" input. Click on the blue "+" next to "to draw a triangle", drag in an input, and name it "length".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefWithParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="5685620916718861467" datatype="html">
        <source>You used extra colors.  Nice!</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.extraColours</note>
      </trans-unit>
      <trans-unit id="5693651952632842190" datatype="html">
        <source>Turtle 2</source>
        <note priority="1" from="description">brief title - Specifies that this is Blockly's '''Turtle 2''' tutorial.</note>
        <note priority="1" from="meaning">Turtle.turtle2</note>
      </trans-unit>
      <trans-unit id="5729392237036335843" datatype="html">
        <source>See generated JavaScript code.</source>
        <note priority="1" from="description">tooltip (pop-up help) for button; pressing the button causes a program in the JavaScript computer language to be displayed, based on the program created by the user.</note>
        <note priority="1" from="meaning">Maze.codeTooltip</note>
      </trans-unit>
      <trans-unit id="5741193476304946702" datatype="html">
        <source>Turns me left or right by 90 degrees.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Pegman is the humanoid icon used in Google Maps. See picture at http://goo.gl/9I64i (http://maps.google.com/intl/en/help/maps/streetview/learn/pegman.html). The term 'space' refers to a single square within a maze.</note>
        <note priority="1" from="meaning">Karel.turnTooltip</note>
      </trans-unit>
      <trans-unit id="5758425077401246127" datatype="html">
        <source>Could not load your saved file.  Perhaps it was created with a different version of Blockly?</source>
        <note priority="1" from="description">alert - There was a problem loading a file previously saved by the user.  The most likely reason for the problem is that it was created with an earlier, incompatible version of Blockly.  This message will be followed by technical information useful to engineers trying to understand the problem.</note>
        <note priority="1" from="meaning">Apps.xmlError</note>
      </trans-unit>
      <trans-unit id="5761782902723990202" datatype="html">
        <source>Open the Loops category, and drag out a "count with" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError2Msg-p2-l7</note>
      </trans-unit>
      <trans-unit id="5803514418162480510" datatype="html">
        <source>Procedures</source>
        <note priority="1" from="description">category - Blocks related to [http://en.wikipedia.org/wiki/Subroutine defining or using procedures/functions].</note>
        <note priority="1" from="meaning">Apps.catProcedures</note>
      </trans-unit>
      <trans-unit id="5820593249319089549" datatype="html">
        <source>Figure out what number to replace the question marks with to draw a circle.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_9</note>
      </trans-unit>
      <trans-unit id="5838195295317713027" datatype="html">
        <source>See generated JavaScript code.</source>
        <note priority="1" from="description">tooltip (pop-up help) for button; pressing the button causes a program in the JavaScript computer language to be displayed, based on the program created by the user.</note>
        <note priority="1" from="meaning">Apps.codeTooltip</note>
      </trans-unit>
      <trans-unit id="5850143700221065216" datatype="html">
        <source>Watch the video below and learn how to use blocks to make me move.</source>
        <note priority="1" from="description">instructions - introduction to the Maze tutorial.</note>
        <note priority="1" from="meaning">Maze.reinfMsg1</note>
      </trans-unit>
      <trans-unit id="5877438069945295867" datatype="html">
        <source>Open the Variables category, and drag a "length" block into the "move forward" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveByLengthMsg2</note>
      </trans-unit>
      <trans-unit id="5885506918206989677" datatype="html">
        <source>The condition when the bird has not gotten the food.</source>
        <note priority="1" from="description">tooltip - 'hungry' means the bird has not gotten its food.</note>
        <note priority="1" from="meaning">Bird.hungryTooltip</note>
      </trans-unit>
      <trans-unit id="5897990846340419751" datatype="html">
        <source>A repeat block repeats the blocks inside it until I reach the red marker.</source>
        <note priority="1" from="description">instructions - 'block' refers to a child's stackable toys. A 'repeat' block is used to repeat blocks over and over. The red marker is the goal to be reached in the maze.</note>
        <note priority="1" from="meaning">Maze.reinfMsg2</note>
      </trans-unit>
      <trans-unit id="5911380370899013787" datatype="html">
        <source>Make a square using only 3 blocks.  (Remember that blocks to set color are free.)</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_3</note>
      </trans-unit>
      <trans-unit id="5922351303839855212" datatype="html">
        <source>do</source>
        <note priority="1" from="description">verb - imperative or infinitive preceding one or more commands to a person.</note>
        <note priority="1" from="meaning">Maze.doCode</note>
      </trans-unit>
      <trans-unit id="6005707509822211432" datatype="html">
        <source>move forward</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person moving (walking) in the direction he/she is facing.</note>
        <note priority="1" from="meaning">Karel.moveForward</note>
      </trans-unit>
      <trans-unit id="6042489320809216081" datatype="html">
        <source>If there is a path in the specified direction, then do some actions.</source>
        <note priority="1" from="description">tooltip (pop-up help) - 'path' refers to a path through a maze. </note>
        <note priority="1" from="meaning">Karel.ifTooltip</note>
      </trans-unit>
      <trans-unit id="6063060740727772843" datatype="html">
        <source>Use the new function block called "fill 5" to help me fill in this hole.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_2</note>
      </trans-unit>
      <trans-unit id="6078028329780496695" datatype="html">
        <source>turn left by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnLeft</note>
      </trans-unit>
      <trans-unit id="6082253890512898845" datatype="html">
        <source>turn left</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person turning his head and body one quarter rotation counter-clockwise.  Prefer a translation that has text in common with the translation of 'turn right'.  See [[Translating:Blockly#Drop-Down_Menus]].</note>
        <note priority="1" from="meaning">Maze.turnLeft</note>
      </trans-unit>
      <trans-unit id="6118282716381283605" datatype="html">
        <source>In this tutorial, to draw a square, use the new "draw a square" function.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawASquareError1Msg-p2</note>
      </trans-unit>
      <trans-unit id="6165004760147466146" datatype="html">
        <source>Here is an 'if' block: I will turn in a particular direction if there is a path in that direction. For example if there is a path to the left, I will turn left.</source>
        <note priority="1" from="description">instructions - An example of an 'if' block is if there is a path to the left, turn left.</note>
        <note priority="1" from="meaning">Maze.reinfMsg4</note>
      </trans-unit>
      <trans-unit id="6167520316579602442" datatype="html">
        <source>Use the 'if-else' block to help me get out of the maze!</source>
        <note priority="1" from="description">instructions - an example of an 'if-else' block is: 'if there is a path to the left, turn left, else or otherwise turn right'.</note>
        <note priority="1" from="meaning">Maze.instructions10_m1</note>
      </trans-unit>
      <trans-unit id="6175401358049603739" datatype="html">
        <source>If there is a path in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.</source>
        <note priority="1" from="description">tooltip (pop-up help) - 'path' refers to a path through a maze.</note>
        <note priority="1" from="meaning">Maze.ifelseTooltip</note>
      </trans-unit>
      <trans-unit id="6189808175540281396" datatype="html">
        <source>Run Program</source>
        <note priority="1" from="description">button label - Pressing the button runs the computer program the user has written.</note>
        <note priority="1" from="meaning">Apps.runProgram</note>
      </trans-unit>
      <trans-unit id="6192414251393604148" datatype="html">
        <source>Blocks used: %1</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.blocksUsed</note>
      </trans-unit>
      <trans-unit id="6192625840582724866" datatype="html">
        <source>Share your blocks with this link:\n\n%1</source>
        <note priority="1" from="description">alert - After the user has pressed a button to save his/her program, this provides the URL (%1) to retrieve the program.  The characters '\n\n' indicate that a blank line will be displayed before the URL (in English).  Leave those in unless you move %1 to the beginning or middle of the text, in which case you should use your judgment about where blank lines would be most useful.</note>
        <note priority="1" from="meaning">Apps.linkAlert</note>
      </trans-unit>
      <trans-unit id="6267174283715529752" datatype="html">
        <source>Put "draw a house" in the light purple area of the "to do something" block you dragged out.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.defineDrawAHouseErrorMsg2</note>
      </trans-unit>
      <trans-unit id="6289518554515132065" datatype="html">
        <source>You need to use the "draw a snowman" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.draw_a_snowmanError1Msg</note>
      </trans-unit>
      <trans-unit id="6303050547013237901" datatype="html">
        <source>You need to add a "length" input to your function definition. The first step is clicking on the blue "+" next to "to draw a triangle".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefWithParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="6315855985873350815" datatype="html">
        <source>A program is a sequence of statements. Stack a couple of 'move forward' blocks together to help me reach the goal.</source>
        <note priority="1" from="description">instructions - the word 'program' refers to a computer program, and the words for 'stack' and 'blocks' should be the same as for stacking children's blocks. Use the imperative verb form appropriate for speaking to a child, gender unspecified.  If no gender-neutral singular/familiar form exists but a gender-neutral plural/formal form exists, use that instead.</note>
        <note priority="1" from="meaning">Maze.instructions1_m1</note>
      </trans-unit>
      <trans-unit id="6316320629891574281" datatype="html">
        <source>Run the program defined by the blocks in the workspace.</source>
        <note priority="1" from="description">tooltip - Pressing this button runs the computer program the user has written.</note>
        <note priority="1" from="meaning">Apps.runTooltip</note>
      </trans-unit>
      <trans-unit id="6382876912107212213" datatype="html">
        <source>Draw a square, making each side a different color.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_2</note>
      </trans-unit>
      <trans-unit id="6403805120342353914" datatype="html">
        <source> N</source>
        <note priority="1" from="description">An abbreviation of the direction North</note>
        <note priority="1" from="meaning">Karel.dirN</note>
      </trans-unit>
      <trans-unit id="6437740372218953759" datatype="html">
        <source>Yes</source>
        <note priority="1" from="description">Yes indicates that this option is correct.</note>
        <note priority="1" from="meaning">Maze.yes</note>
      </trans-unit>
      <trans-unit id="6453210751254129827" datatype="html">
        <source>The "length" input to "draw a square" should be the "height" variable.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.squareCallWithParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="6491926390857975299" datatype="html">
        <source>There was a problem with the request.</source>
        <note priority="1" from="description">alert - The URL is invalid or a server error occurred.  This message will be followed by technical information useful to engineers trying to understand the problem.</note>
        <note priority="1" from="meaning">Apps.httpRequestError</note>
      </trans-unit>
      <trans-unit id="6519485570134958266" datatype="html">
        <source>We can place 'if' blocks inside 'repeat' blocks. Where am I when this program ends? Click on the correct picture below.</source>
        <note priority="1" from="description">instructions - An example of an 'if' block is if there is a path to the left, turn left. A 'repeat' block is used to repeat blocks over and over. 'program' refers to a series of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Maze.reinfMsg5</note>
      </trans-unit>
      <trans-unit id="6521894157625254660" datatype="html">
        <source>You have <x id="START_SPAN"/>%1<x id="END_SPAN"/> blocks left.</source>
        <note priority="1" from="description">warning - Only %1 more blocks may be used, where %1 is an integer greater than 1.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase.</note>
        <note priority="1" from="meaning">Karel.capacity2</note>
      </trans-unit>
      <trans-unit id="6522997473700521653" datatype="html">
        <source>Draw three snowmen 150 dots tall in different colors, 100 dots apart.  Use the new "draw a snowman" function and "jump forward" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_8</note>
      </trans-unit>
      <trans-unit id="6533409555866489852" datatype="html">
        <source>Reset</source>
        <note priority="1" from="description">button label - Pressing the button causes the output of the program to be erased but does not delete the user's program).</note>
        <note priority="1" from="meaning">Apps.resetProgram</note>
      </trans-unit>
      <trans-unit id="6537484406802177826" datatype="html">
        <source>No - Try tracking my direction while following the program.</source>
        <note priority="1" from="description">Tracking is suggesting to the user that they should follow each instruction and follow how that will affect the movement. A 'program' is a set of instructions that tell the computer what to do next.</note>
        <note priority="1" from="meaning">Maze.q5wrong</note>
      </trans-unit>
      <trans-unit id="6650354588969822092" datatype="html">
        <source>Blockly</source>
        <note priority="1" from="description">The project name.  If readers of your language would know approximately how to pronounce 'Blockly', leave unchanged.  Otherwise, include a transliteration in parentheses, such as the Russian: 'Blockly (Блoкли)'.</note>
        <note priority="1" from="meaning">Apps.blocklyMessage</note>
      </trans-unit>
      <trans-unit id="6663738925071708449" datatype="html">
        <source>The "length" input to the "draw a triangle" block within "to draw a house" should depend on the height of the house.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleCallWithVariableParameterErrorMsg1</note>
      </trans-unit>
      <trans-unit id="6857002184840337600" datatype="html">
        <source>I'll need to turn in order to draw this picture.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveForwardError1Msg</note>
      </trans-unit>
      <trans-unit id="6857649740542289196" datatype="html">
        <source>You are using all of the necessary types of blocks but not in the right way.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.levelIncompleteError</note>
      </trans-unit>
      <trans-unit id="6889946611851664425" datatype="html">
        <source>turn right by</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnRight</note>
      </trans-unit>
      <trans-unit id="6961885717405359269" datatype="html">
        <source>Make me remove the 4 piles.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_4</note>
      </trans-unit>
      <trans-unit id="6974877659202820695" datatype="html">
        <source>Conditionals</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.catCondition</note>
      </trans-unit>
      <trans-unit id="7049730293562356228" datatype="html">
        <source>An 'if' condition will do something only if the condition is true.  Try turning right if there is a path to the right.</source>
        <note priority="1" from="description">instructions - an example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions15_m2</note>
      </trans-unit>
      <trans-unit id="7068270386450979574" datatype="html">
        <source>x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.</source>
        <note priority="1" from="description">tooltip - (x, y) marks the coordinate of bird, (0, 0) is the bottom left corner and (100, 100) top right.</note>
        <note priority="1" from="meaning">Bird.positionTooltip</note>
      </trans-unit>
      <trans-unit id="7083250244318947033" datatype="html">
        <source>You have<x id="START_SPAN"/>0<x id="END_SPAN"/> blocks left.</source>
        <note priority="1" from="description">warning - No more blocks may be added until some are removed.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase and replace 0 with one or more words.</note>
        <note priority="1" from="meaning">Maze.capacity0</note>
      </trans-unit>
      <trans-unit id="7089740218907481322" datatype="html">
        <source>Turns the turtle left or right by the specified number of degrees.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turnTooltip</note>
      </trans-unit>
      <trans-unit id="7092543574136431786" datatype="html">
        <source>You need to use a "repeat" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.repeatError2Msg</note>
      </trans-unit>
      <trans-unit id="7102371650442076855" datatype="html">
        <source>I will have to turn left when I cannot go straight. Use an 'if' block to see if their is a path in another direction.</source>
        <note priority="1" from="description">instructions - 'turn left' refers to rotating in place a quarter circle counter-clockwise. An example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions13_m2</note>
      </trans-unit>
      <trans-unit id="7136191596007745789" datatype="html">
        <source>To change the color I draw, use the "set color" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawColourError1Msg</note>
      </trans-unit>
      <trans-unit id="7149849676690329496" datatype="html">
        <source>Congratulations! You have solved the final level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the most difficult level.</note>
        <note priority="1" from="meaning">Maze.finalLevel</note>
      </trans-unit>
      <trans-unit id="7203115976263529382" datatype="html">
        <source>You need to use the "move forward" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">BlocklyApps.moveForwardError2Msg</note>
      </trans-unit>
      <trans-unit id="7264828567211374881" datatype="html">
        <source>Open the Math category, and pull out a number block.  Change its value and plug it into the "draw a triangle" block to say how big the first triangle should be.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleCallWithNumericParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="7314181232693154293" datatype="html">
        <source>list</source>
        <note priority="1" from="description">variable name - Default [https://code.google.com/p/blockly/wiki/Variables variable] representing a [https://code.google.com/p/blockly/wiki/Lists list].  This should be a single word, preferably short.</note>
        <note priority="1" from="meaning">Apps.listVariable</note>
      </trans-unit>
      <trans-unit id="7388270388391736213" datatype="html">
        <source>Move me across the field, and use the functions to help me remove all the piles and fill all the holes.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions2_10</note>
      </trans-unit>
      <trans-unit id="7407757177156067975" datatype="html">
        <source>That's right!</source>
        <note priority="1" from="description">Congratulating the user on correctly answering the question.</note>
        <note priority="1" from="meaning">Maze.q5right</note>
      </trans-unit>
      <trans-unit id="7431547268749431251" datatype="html">
        <source>Now change the code to draw 36 squares, each 10 degrees apart.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions2_4</note>
      </trans-unit>
      <trans-unit id="7508911288134093999" datatype="html">
        <source>Try to reach the end of this path using the new repeat block.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions9_m2</note>
      </trans-unit>
      <trans-unit id="7563511320497497010" datatype="html">
        <source>Moves the turtle forward without leaving any marks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.jumpForwardTooltip</note>
      </trans-unit>
      <trans-unit id="7591952638102423516" datatype="html">
        <source>Open the Functions category, and pull out a "draw a house" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseError2Msg</note>
      </trans-unit>
      <trans-unit id="7679520811180036692" datatype="html">
        <source>Hint:</source>
        <note priority="1" from="description">page text - this precedes suggestions to the user.</note>
        <note priority="1" from="meaning">Turtle.hintTitle</note>
      </trans-unit>
      <trans-unit id="7686423618086788043" datatype="html">
        <source>Try to reach the end of this path using only two blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions5_m2</note>
      </trans-unit>
      <trans-unit id="7689400048197260467" datatype="html">
        <source>Make me remove all the piles, using as few blocks as possible.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_9</note>
      </trans-unit>
      <trans-unit id="7740915719993711156" datatype="html">
        <source>Your picture is the wrong color.  For this level, it needs to be %1.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.wrongColour</note>
      </trans-unit>
      <trans-unit id="7749302614726290572" datatype="html">
        <source>From the "Variables" category, get the "counter" block, and use it as the input to the "move forward" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError2Msg-p2-l7</note>
      </trans-unit>
      <trans-unit id="7805730108407717734" datatype="html">
        <source>There is a solution using only 3 blocks. Can you find it?za</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint1_8</note>
      </trans-unit>
      <trans-unit id="7828848175932035894" datatype="html">
        <source>No</source>
        <note priority="1" from="description">No indicates that this option is incorrect.</note>
        <note priority="1" from="meaning">Maze.no</note>
      </trans-unit>
      <trans-unit id="7849089032479822046" datatype="html">
        <source>Continue</source>
        <note priority="1" from="description">button - Closes the dialog and continues to the next level</note>
        <note priority="1" from="meaning">Maze.continue</note>
      </trans-unit>
      <trans-unit id="7862783498529930828" datatype="html">
        <source>turn left</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person turning his head and body one quarter rotation counter-clockwise.  Prefer a translation that has text in common with the translation of 'turn right'.  See [[Translating:Blockly#Drop-Down_Menus]].</note>
        <note priority="1" from="meaning">Karel.turnLeft</note>
      </trans-unit>
      <trans-unit id="7880221162350996120" datatype="html">
        <source>Lists</source>
        <note priority="1" from="description">category - Blocks related to [https://code.google.com/p/blockly/wiki/Lists lists].</note>
        <note priority="1" from="meaning">Apps.catLists</note>
      </trans-unit>
      <trans-unit id="7902410796604636335" datatype="html">
        <source>Could you use fewer blocks? Try defining your own function and using it inside one of the loop block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_5</note>
      </trans-unit>
      <trans-unit id="7916832332058433887" datatype="html">
        <source>Try to reach the end of this path using only three blocks.</source>
        <note priority="1" from="description">instructions - 'path' refers to a path through a maze, and 'block' refers to a child's building block.</note>
        <note priority="1" from="meaning">Maze.instructions6_m2</note>
      </trans-unit>
      <trans-unit id="7975813070692811697" datatype="html">
        <source>length</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.lengthParameter</note>
      </trans-unit>
      <trans-unit id="7984282415431843099" datatype="html">
        <source>This level can be solved with <x id="START_SPAN"/><x id="END_SPAN"/> blocks.</source>
        <note priority="1" from="description">alert - This is displayed when the user has used more blocks than is necessary.</note>
        <note priority="1" from="meaning">Maze.tooManyBlocksMsg</note>
      </trans-unit>
      <trans-unit id="8037633027892627134" datatype="html">
        <source>set width</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.setWidth</note>
      </trans-unit>
      <trans-unit id="8038615649098339929" datatype="html">
        <source>Move me forward one space.</source>
        <note priority="1" from="description">tooltip (pop-up help) - Pegman is the humanoid icon used in Google Maps. See picture at http://goo.gl/9I64i (http://maps.google.com/intl/en/help/maps/streetview/learn/pegman.html). The term 'space' refers to a single square within a maze.</note>
        <note priority="1" from="meaning">Karel.moveForwardTooltip</note>
      </trans-unit>
      <trans-unit id="8086403647682698529" datatype="html">
        <source>Reset</source>
        <note priority="1" from="description">button label - Pressing the button causes Pegman return to the start of the maze (but does not delete the user's program.)</note>
        <note priority="1" from="meaning">Maze.resetProgram</note>
      </trans-unit>
      <trans-unit id="8114472900026433552" datatype="html">
        <source>Congratulations! You have completed this level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the level, inviting them to precede to the next level of difficulty.</note>
        <note priority="1" from="meaning">Turtle.nextLevel</note>
      </trans-unit>
      <trans-unit id="8129982734118740893" datatype="html">
        <source>else</source>
        <note priority="1" from="description">block text - Conjunction meaning 'otherwise', introducing commands to be performed if a previous condition was not true, as in 'if x&gt;3, do this, else do that'.  See [https://code.google.com/p/blockly/wiki/IfElse#If-Else_blocks].</note>
        <note priority="1" from="meaning">Bird.elseCode</note>
      </trans-unit>
      <trans-unit id="8169126390389631773" datatype="html">
        <source>Can you find a solution using 4 blocks? Try including an if block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_9</note>
      </trans-unit>
      <trans-unit id="8194173010046025493" datatype="html">
        <source>You have <x id="START_SPAN"/>%1<x id="END_SPAN"/> blocks left.</source>
        <note priority="1" from="description">warning - Only %1 more blocks may be used, where %1 is an integer greater than 1.  Do not alter the portions between pointy brackets (&lt; and &gt;), although you may move them within the phrase.</note>
        <note priority="1" from="meaning">Maze.capacity2</note>
      </trans-unit>
      <trans-unit id="8233180769854710662" datatype="html">
        <source>Make me remove all the piles of dirt, using as few blocks as possible. Check out the new option in the dropdown menu on the while block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_6</note>
      </trans-unit>
      <trans-unit id="8285768475184396675" datatype="html">
        <source>Try again</source>
        <note priority="1" from="description">button - Closes the dialog and stays on the current level</note>
        <note priority="1" from="meaning">Turtle.tryAgain</note>
      </trans-unit>
      <trans-unit id="8318979339055620562" datatype="html">
        <source>Draw anything you want. Some ideas are a stick figure, snowflake, or spiral.  You could also try out the new "set width" block.  Have fun!</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_10</note>
      </trans-unit>
      <trans-unit id="8349021672644911810" datatype="html">
        <source>You need to set a color other than black for this level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.notBlackColour</note>
      </trans-unit>
      <trans-unit id="8371649783355046985" datatype="html">
        <source>Reload the page to get back the "to draw a triangle" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.triangleDefErrorMsg2</note>
      </trans-unit>
      <trans-unit id="8380965510044188233" datatype="html">
        <source>What should I do to follow the path?</source>
        <note priority="1" from="description">instructions - 'steps' refers to instructions in a computer program; 'path' refers to the path through a maze. See previous description for tense.</note>
        <note priority="1" from="meaning">Maze.instructions4_m2</note>
      </trans-unit>
      <trans-unit id="8384449975507912273" datatype="html">
        <source>Congratulations! You have completed this level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the maze, inviting them to precede to the next level of difficulty.</note>
        <note priority="1" from="meaning">Karel.nextLevel</note>
      </trans-unit>
      <trans-unit id="8433889366554272133" datatype="html">
        <source>After trying out these blocks, see what happens if you make them repeat 8 times.  It should look a little different every time you run it.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions1_8</note>
      </trans-unit>
      <trans-unit id="8477353950021927991" datatype="html">
        <source>You are using all of the necessary types of blocks but not in the right way.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Maze.levelIncompleteError</note>
      </trans-unit>
      <trans-unit id="8496210457380227143" datatype="html">
        <source>if path to the right</source>
        <note priority="1" from="description">condensed form of 'if there is a path to the right', as in: 'if path to the right, turn right'.</note>
        <note priority="1" from="meaning">Maze.pathRight</note>
      </trans-unit>
      <trans-unit id="8504064665960111059" datatype="html">
        <source>Math</source>
        <note priority="1" from="description">category - Blocks related to mathematics.</note>
        <note priority="1" from="meaning">Apps.catMath</note>
      </trans-unit>
      <trans-unit id="8514812131842527965" datatype="html">
        <source>Loops</source>
        <note priority="1" from="description">category - Blocks related to [http://en.wikipedia.org/wiki/Control_flow#Loops loops].</note>
        <note priority="1" from="meaning">Apps.catLoops</note>
      </trans-unit>
      <trans-unit id="8534502739327408278" datatype="html">
        <source>Your "draw a house" function needs a "height" input. Click on the blue "+" next to "to draw a house", drag in an input, and name it "height".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.houseDefWithParameterErrorMsg2</note>
      </trans-unit>
      <trans-unit id="8552911449139168297" datatype="html">
        <source>Math</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catMath</note>
      </trans-unit>
      <trans-unit id="8555382107213594291" datatype="html">
        <source>Functions</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.catProcedures</note>
      </trans-unit>
      <trans-unit id="8579234885497641539" datatype="html">
        <source>Could you use two while blocks to complete this level with fewer total blocks?</source>
        <note priority="1" from="description">hint - A 'repeat' block is used to repeat blocks over and over. The red marker is the goal to be reached in the maze.</note>
        <note priority="1" from="meaning">Karel.hint1_9</note>
      </trans-unit>
      <trans-unit id="8582408810273452213" datatype="html">
        <source>set color</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.setColour</note>
      </trans-unit>
      <trans-unit id="8598935855828958714" datatype="html">
        <source>show turtle</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.showTurtle</note>
      </trans-unit>
      <trans-unit id="8605819299263106886" datatype="html">
        <source>Cancel</source>
        <note priority="1" from="description">Label on button for user to press when not wanting to proceed.\n{lb}{lb}Identical|Cancel{rb}{rb}</note>
        <note priority="1" from="meaning">Apps.dialogCancel</note>
      </trans-unit>
      <trans-unit id="8608099354830091505" datatype="html">
        <source>Reload this level to get the "count with" block back.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.forError1Msg-p2-l6</note>
      </trans-unit>
      <trans-unit id="8625429193502071045" datatype="html">
        <source>You need to complete level 7 before doing this level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseNotDefined8</note>
      </trans-unit>
      <trans-unit id="8669528399059881976" datatype="html">
        <source>You need to complete levels 7 and 8 before doing this level.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.drawAHouseNotDefined9</note>
      </trans-unit>
      <trans-unit id="8681810675525840996" datatype="html">
        <source>Move me to the hole and fill it with two shovelfuls of dirt.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.instructions1_2</note>
      </trans-unit>
      <trans-unit id="8682553848590484654" datatype="html">
        <source>CS First</source>
        <note priority="1" from="description">The project name. 'CS' is an abbreviation for Computer Science. 'First' refers to the project's goal of introducing students to programming as early as possible in their life.</note>
        <note priority="1" from="meaning">Apps.projectMessage</note>
      </trans-unit>
      <trans-unit id="8749025810731513897" datatype="html">
        <source>Congratulations! You have solved the final level.</source>
        <note priority="1" from="description">alert - This is displayed when the user solves the most difficult level.</note>
        <note priority="1" from="meaning">Turtle.finalLevelMsg</note>
      </trans-unit>
      <trans-unit id="8779064823777873363" datatype="html">
        <source>You'll need to move me forward in order to draw anything.</source>
        <note priority="1" from="description">alert - This error message is displayed when the user has not used at least one of the move forward blocks that is required for this level.</note>
        <note priority="1" from="meaning">BlocklyApps.moveForwardError1Msg</note>
      </trans-unit>
      <trans-unit id="8800042076697933710" datatype="html">
        <source>S</source>
        <note priority="1" from="description">An abbreviation of the direction North</note>
        <note priority="1" from="meaning">Maze.dirS</note>
      </trans-unit>
      <trans-unit id="8801900916913964496" datatype="html">
        <source>Run</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.runProgram</note>
      </trans-unit>
      <trans-unit id="8812489020733766443" datatype="html">
        <source>Here are all of the blocks from the previous level.  Modify "draw a house" so the turtle ends up at the bottom right corner of the new house.  Use this modified function to house all the animals.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.instructions3_8</note>
      </trans-unit>
      <trans-unit id="8845471850980427029" datatype="html">
        <source>The amount to move forward should depend on the input "length".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.moveByLengthMsg1</note>
      </trans-unit>
      <trans-unit id="8913109889120470164" datatype="html">
        <source> E</source>
        <note priority="1" from="description">An abbreviation of the direction East</note>
        <note priority="1" from="meaning">Karel.dirE</note>
      </trans-unit>
      <trans-unit id="8928262773877552345" datatype="html">
        <source>Can you find a solution using 2 blocks? Try using the given function(s) inside one of the loop blocks.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Karel.hint2_8</note>
      </trans-unit>
      <trans-unit id="8932595450551335067" datatype="html">
        <source>Will the blocks below move me to the red marker?</source>
        <note priority="1" from="description">instructions - 'block' refers to a child's stackable toys. A 'repeat' block is used to repeat blocks over and over. The red marker is the goal to be reached in the maze.</note>
        <note priority="1" from="meaning">Maze.reinfMsg9</note>
      </trans-unit>
      <trans-unit id="8936065697019043252" datatype="html">
        <source>You need the "counter" block to draw squares of different lengths.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError1Msg-p2-l6</note>
      </trans-unit>
      <trans-unit id="8939528218719420819" datatype="html">
        <source>turn right</source>
        <note priority="1" from="description">verb - imperative or infinitive for a person turning his head and body one quarter rotation clockwise. Prefer a translation that has text in common with the translation of 'turn left'.  See [[Translating:Blockly#Drop-Down_Menus]].</note>
        <note priority="1" from="meaning">Karel.turnRight</note>
      </trans-unit>
      <trans-unit id="9016285072881975083" datatype="html">
        <source>Makes the turtle (green circle and arrow) visible or invisible.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.turtleVisibilityTooltip</note>
      </trans-unit>
      <trans-unit id="9068460194411820247" datatype="html">
        <source>What should I do to follow the path?</source>
        <note priority="1" from="description">instructions - 'steps' refers to instructions in a computer program; 'path' refers to the path through a maze. See previous description for tense.</note>
        <note priority="1" from="meaning">Maze.instructions3_m2</note>
      </trans-unit>
      <trans-unit id="9086989428695605818" datatype="html">
        <source>OK</source>
        <note priority="1" from="description">Closes the dialog box.</note>
        <note priority="1" from="meaning">Karel.ok</note>
      </trans-unit>
      <trans-unit id="9118450120744905757" datatype="html">
        <source>From the "Variables" category, get the "counter" block, and use it as the input to the "draw a house" block.</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.getCounterError2Msg-p3</note>
      </trans-unit>
      <trans-unit id="9137982570247930589" datatype="html">
        <source>else</source>
        <note priority="1" from="description">conjunction - 'otherwise', introducing commands to be performed if a previous condition was not true, as in 'if x&gt;3, do this, else do that'.</note>
        <note priority="1" from="meaning">Maze.elseCode</note>
      </trans-unit>
      <trans-unit id="9151382257658567281" datatype="html">
        <source>a visual programming environment</source>
        <note priority="1" from="description">A short description of Blockly.</note>
        <note priority="1" from="meaning">Apps.subtitle</note>
      </trans-unit>
      <trans-unit id="9153574285270009323" datatype="html">
        <source>The function you create must be named "draw a house".</source>
        <note priority="1" from="description">TODO</note>
        <note priority="1" from="meaning">Turtle.defineDrawAHouseErrorMsg1-l5</note>
      </trans-unit>
      <trans-unit id="9175946759388661783" datatype="html">
        <source>You can use more than one 'if' statement.</source>
        <note priority="1" from="description">instructions - an example of an 'if' block is: 'if there is a path to the left, turn left'.</note>
        <note priority="1" from="meaning">Maze.instructions8_m1</note>
      </trans-unit>
      <trans-unit id="9192320043405678363" datatype="html">
        <source>Turtle 3</source>
        <note priority="1" from="description">brief title - Specifies that this is Blockly's '''Turtle 3''' tutorial.</note>
        <note priority="1" from="meaning">Turtle.turtle3</note>
      </trans-unit>
    </body>
  </file>
</xliff>
