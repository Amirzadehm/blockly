{namespace page2}
/**
 * Hints for page 2.
 */
{template .hints}
  {switch $ij.level}
    {case 1}
      {msg meaning="Karel.instructions2_1" desc="TODO"}
        Try using the given blocks to remove all the piles on the ground.
      {/msg}
    {case 2}
      {msg meaning="Karel.instructions2_2" desc="TODO"}
        You are now given a new function block, "fill 5", in the Functions
        category. It will fill 5 shovelfuls to a hole. Use it to make the
        farmer fill in the hole.
      {/msg}
    {case 3}
      {msg meaning="Karel.instructions2_3" desc="TODO"}
        Use the function block to make the farmer fill in all the holes.
      {/msg}
    {case 4}
      {msg meaning="Karel.instructions2_4" desc="TODO"}
        Define a new function that removes a pile which needs 7 shovelfuls to make
        the farmer remove in all the piles.
      {/msg}
    {case 5}
      {msg meaning="Karel.instructions2_5" desc="TODO"}
        Create a new function, "remove 3", that removes 3 shovelfuls from a pile,
        and use it to help the farmer level out all the piles.
      {/msg}
    {case 6}
      {msg meaning="Karel.instructions2_6" desc="TODO"}
        Use the new functions, "fill 8" and "remove 8", to level out the
        pile and fill in the hole.
      {/msg}
    {case 7}
      {msg meaning="Karel.instructions2_7" desc="TODO"}
        Create a new function, "avoid the cow and remove 1", that helps the farmer
        avoid the cow and remove 1 shovelful from a pile, and use it.
      {/msg}
    {case 8}
      {msg meaning="Karel.instructions2_8" desc="TODO"}
        Use the function, "avoid the cow and remove 1", to help the farmer avoid the
        row of cows.
      {/msg}
    {case 9}
      {msg meaning="Karel.instructions2_9" desc="TODO"}
        Use the function, "remove 1 and avoid the cow", to make the farmer level out
        the piles. Notice that remove 1 shoveful of dirt is now done before avoiding the cow in this level.
      {/msg}
  {/switch}
{/template}
/**
 * Toolbox for Karel 2
 */
{template .toolbox}
  <category name="{msg meaning="Karel.catKarel" desc="TODO"}Actions{/msg}">
    <block type="maze_moveForward"></block>
    <block type="maze_turn"><title name="DIR">turnLeft</title></block>
    <block type="maze_turn"><title name="DIR">turnRight</title></block>
    <block type="maze_pickUpBall"></block>
    <block type="maze_putDownBall"></block>
  </category>
  {call .addProcedures /}
{/template}
/**
 * Add the procedures category to the toolbox.
 */
{template .addProcedures}
  {if $ij.level > 3}
    <category name="{msg meaning="Karel.catProcedures" desc="TODO"}Functions{/msg}" custom="PROCEDURE"></category>
  {elseif $ij.level == 2 or $ij.level == 3}
    <category name="{msg meaning="Karel.catProcedures" desc="TODO"}Functions{/msg}">
      <block type="procedures_callnoreturn">
        <mutation name="fill 5"></mutation>
      </block>
    </category>
  {/if}
  {if $ij.level < 9}
    <category name="{msg meaning="Karel.catCondition" desc="TODO"}Conditionals{/msg}">
      <block type="maze_if"></block>
    </category>
  {elseif $ij.level == 9}
    <category name="{msg meaning="Karel.catCondition" desc="TODO"}Conditionals{/msg}">
      <block type="maze_if"></block>
      <block type="maze_ifElse"></block>
    </category>
  {/if}
  {if $ij.level < 9}
    <category name="{msg meaning="Karel.catControl" desc="TODO"}Loops{/msg}">
      <block type="maze_untilBlocked"></block>
      <block type="controls_repeat"></block>
    </category>
  {else}
    <category name="{msg meaning="Karel.catControl" desc="TODO"}Loops{/msg}">
      <block type="maze_untilBlockedOrNotClear"></block>
      <block type="controls_repeat"></block>
    </category>
  {/if}
{/template}
{/namespace}
