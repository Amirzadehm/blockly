{namespace mazepage}

/**
 * This is a Closure Template.
 *
 * To build the US English version, run:
 * java -jar ../_soy/SoyToJsSrcCompiler.jar --outputPathFormat generated/en_us.js --srcs ../common.soy,template.soy
 *
 * To fully internationalize, follow the instructions in ../common.soy.
 */

/**
 * Interstitials.
 * @param class
 * @param interstitial
 */
{template .interstitial}
  <p class="{$class}">
    {if $interstitial.images}
      {foreach $img in $interstitial.images}
        <img src="{$ij.baseUrl}{$img}"/>
      {/foreach}
    {/if}
    {if $interstitial.blocks}
      <iframe src="{$ij.baseUrl}maze/readonly.html?xml={$interstitial.blocks}"></iframe>
    {/if}
    {if $interstitial.videoId}
      <iframe class="video" src="https://docs.google.com/file/d/{$interstitial.videoId}/preview;"></iframe>
    {/if}
  </p>
{/template}

/**
 * Web page structure.
 */
{template .start}
  <table width="100%" {call apps.menu}{param menu: $ij.menu /}{/call}
    style="border-bottom: 1px solid #DBDBDB;">
    <tr>
      <td>
        <h1>
          <span id="title">
            <a href="https://sites.google.com/site/computersciencefirst/">
              {msg meaning="Apps.projectMessage" desc="IBID"}CS First{/msg}</a>
            {sp}:{sp}
            {msg meaning="Maze.maze" desc="brief title - Specifies that this is
              Blockly's '''Maze''' tutorial."}
              Maze
            {/msg}
          </span>
          {sp}&nbsp;{sp}
          {for $i in range(1, $ij.page == 2 ? 19 : 11)}
            {sp}
            {if $i == $ij.level}
              {if $i > ($ij.page == 2 ? 19 : 11) - 2}
                <span class="selected doubleDigit tab">{$i}</span>
              {else}
                <span class="selected tab">{$i}</span>
              {/if}
            {else}
              {if $i < $ij.level}
                <a class="tab previous" href="?page={$ij.page}&level={$i}&skin={$ij.skin}">{$i}</a>
              {else}
                <a class="tab" href="?page={$ij.page}&level={$i}&skin={$ij.skin}">{$i}</a>
              {/if}
            {/if}
          {/for}
        </h1>
      </td>
      <td class="farSide">
        <button id="helpButton" onclick="BlocklyApps.showHelp(true, {$ij.level}, false);">
          {msg meaning="Apps.help" desc="IBID"}Help{/msg}
        </button>
      </td>
    </tr>
  </table>

  /**
   * For processing the window input after finishing a level.
   */
  {call apps.dialog /}
  {call apps.codeDialog /}
  {call apps.storageDialog /}
  <div id="help" class="dialogHiddenContent">
    <div style="padding-bottom: 0.7ex;"><br>
      <img class="stars feedback" id="star1" src="{$ij.baseUrl}star1.png">
      <img class="stars feedback" id="star2" src="{$ij.baseUrl}star2.png">
      <img class="stars feedback" id="star3" src="{$ij.baseUrl}star3.png">
      <ul id="levelFeedbackText">
        <span id="hintTitle" class="feedback" style="display: none; margin-left: -30px">{msg meaning="Apps.hintTitle" desc="IBID"}{/msg}Hints:</span>
        <li id="nextLevelMsg" style="display: none; margin-left: -40px;">{msg
          meaning="Apps.nextLevel" desc="IBID"}Congratulations! You have completed this level.{/msg}</li>
        <li id="finalLevelMsg" style="display: none; margin-left: -40px;">{msg
          meaning="Apps.finalLevelMsg" desc="alert - This is displayed when
          the user solves the most difficult level."}Congratulations! You
          have solved the final level.{/msg}</li>
        <li id="emptyBlocksError" class="feedback" style="display: none">
          {msg meaning="Apps.emptyBlocksErrorMsg" desc="IBID"}Remove empty blocks.{/msg}</li>
        <li id="missingBlocksError" class="feedback" style="display: none">
          {msg meaning="Apps.missingBlocksErrorMsg" desc="IBID"}Try one or more of the blocks below to solve this level.{/msg}</li>
        <li id="tooManyBlocksError" class="feedback" style="display: none">
          {msg meaning="Apps.tooManyBlocksMsg" desc="IBID"}This level can be solved with <span id="idealNumberMessage"></span> blocks.{/msg}</li>
        <li id="tooFewBlocksError" class="feedback" style="display: none">
          {msg meaning="Apps.tooFewBlocksMsg" desc="IBID"}You are using all of the necessary types of blocks, but try using more  of these types of blocks to complete this level.{/msg}</li>
        <li id="levelIncompleteError" class="feedback" style="display: none">
          {msg meaning="Apps.levelIncompleteError" desc="IBID"}You are using all of the necessary types of blocks but not in the right way.{/msg}</li>
      </ul>  // feedbackText
      <iframe id="feedbackBlocks" class="feedback" style="margin-left: 50px;
        height: 80px; width: 500px; border: none; display: none;" src=""></iframe>

      /**
       * Interstitials.
       */
      <div id="interstitial" style="display: none;">
        <div style="margin-left: 50px;">
          <div id="reinfbubble">
            <span id="reinfMsg">
              {if $ij.interstitials.before}
                <span class="preInter">{$ij.interstitials.before.message}</span>
              {/if}
              {if $ij.interstitials.after}
                <span class="postInter">{$ij.interstitials.after.message}</span>
              {/if}
            </span>
          </div>
          <img id="pegman_bubble" height=42 width=55 src="{$ij.baseUrl}maze/pegman_bubble.png">
        </div>
        /**
         * Show image and/or video below avatar for these reinf levels.
         */
        {if $ij.interstitials.before}
          {call .interstitial}
            {param class}preInter{/param}
            {param interstitial: $ij.interstitials.before /}
          {/call}
        {/if}
        {if $ij.interstitials.after}
          {call .interstitial}
            {param class}postInter{/param}
            {param interstitial: $ij.interstitials.after /}
          {/call}
        {/if}
      </div>
      /**
       * End reinf level processing.
       */
      <br>
      <div id="returnToLevelButton" style="display: none;">{call apps.ok /}</div>
      <div style="text-align: center">
        <button id="tryAgainButton" class="launch" style="display: none"
          onclick="BlocklyApps.goToNextLevelOrReset(false);">
          {msg meaning="Maze.tryAgain" desc="button - Closes the dialog and
            stays on the current level"}Try again{/msg}
        </button>
        <button id="continueButton" class="launch" style="display: none"
          onclick="BlocklyApps.goToNextLevelOrReset(true);">
            {msg meaning="Maze.continue" desc="button - Closes the dialog and
              continues to the next level"}Continue{/msg}
        </button>
      </div>
    </div>
  </div>
  <div id="visualization">
    <div id="hintBubble">
      <div id="hint"></div>
    </div>
    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" id="svgMaze">
      <g id="look">
        <path d="M 0,-15 a 15 15 0 0 1 15 15" />
        <path d="M 0,-35 a 35 35 0 0 1 35 35" />
        <path d="M 0,-55 a 55 55 0 0 1 55 55" />
      </g>
    </svg>
    <div id="capacityBubble">
      <div id="capacity"></div>
    </div>
  </div>

  <table id="gameButtons" width="400" style="padding-top: 10px;">
    <tr>
      <td style="width: 190px; text-align: center; vertical-align: top;">
        <button class="notext" title="{msg meaning="Maze.codeTooltip"
          desc="tooltip (pop-up help) for button; pressing the button causes a
          program in the JavaScript computer language to be displayed, based on
          the program created by the user."}See generated JavaScript code.{/msg}"
          onclick="BlocklyApps.showCode();">
          <img src='{$ij.baseUrl}media/1x1.gif' alt="code" class="code icon21">
        </button>
        <button id="linkButton" class="notext" style="display: none;"
          title="{msg meaning="Maze.linkTooltip" desc="tooltip (pop-up help) for
          button; pressing the button causes the user's program to be saved and
          for a URL to be provided for retrieving it.  The word 'blocks' is as
          in children's toy blocks."}Save and link to blocks.{/msg}"
          onclick="BlocklyStorage.link();">
          <img src='{$ij.baseUrl}media/1x1.gif' alt="link" class="link icon21">
        </button>
      </td>
      <td>
        <button id="runButton" class="launch" onclick="Maze.runButtonClick();">
            <img src="{$ij.baseUrl}media/1x1.gif" class="run icon21">{msg meaning="Maze.runProgram"
            desc="button label - Pressing the button runs the computer program the user has
            written."}Run{/msg}
          </button>
        </button>
        <button id="resetButton" class="launch"
          onclick="BlocklyApps.resetButtonClick();" style="display: none">
            <img src="{$ij.baseUrl}media/1x1.gif" class="stop icon21">
              {msg meaning="Maze.resetProgram" desc="button label -
                Pressing the button causes Pegman return to the start of the maze
                (but does not delete the user's program.)"}Reset{/msg}
          </button>
      </td>
    </tr>
  </table>

  {call .toolbox /}
  <div id="blockly"></div>
</div>

  {call apps.dialog /}
  {call apps.codeDialog /}
  {call apps.storageDialog /}
{/template}

/**
 * Toolboxes for each level.
 */
{template .toolbox}
  <xml id="toolbox" style="display: none;">
    <block type="maze_moveForward"></block>
    <block type="maze_turn"><title name="DIR">turnLeft</title></block>
    <block type="maze_turn"><title name="DIR">turnRight</title></block>
    {if $ij.page == 1}
      {if $ij.level > 2}
        <block type="maze_forever"></block>
        {if $ij.level == 5}
          <block type="maze_if"><title name="DIR">isPathLeft</title></block>
        {elseif $ij.level > 5 and $ij.level < 9}
          <block type="maze_if"></block>
        {/if}
       {if $ij.level > 8}
         <block type="maze_ifElse"></block>
       {/if}
      {/if}
    {elseif $ij.page == 2}
      {if $ij.level > 4 and $ij.level < 9}
        <block type="controls_repeat">
          <title name="TIMES">5</title>
        </block>
      {/if}
      {if $ij.level > 8}
        <block type="maze_forever"></block>
        {if $ij.level == 13}
          <block type="maze_if"><title name="DIR">isPathLeft</title></block>
        {elseif $ij.level == 14}
          <block type="maze_if"><title name="DIR">isPathRight</title></block>
        {elseif $ij.level > 13 and $ij.level < 17}
          <block type="maze_if"></block>
        {/if}
        {if $ij.level > 16}
         <block type="maze_ifElse"></block>
       {/if}
      {/if}
    {/if}
  </xml>
{/template}
